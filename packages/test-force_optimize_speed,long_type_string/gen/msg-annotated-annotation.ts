// @generated by protobuf-ts 2.9.5 with parameter force_optimize_speed,long_type_string
// @generated from protobuf file "msg-annotated-annotation.proto" (package "spec", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * test case for #141
 *
 * @generated from protobuf message spec.MsgOptSelf
 */
export interface MsgOptSelf {
    /**
     * @generated from protobuf field: bool a = 1;
     */
    a: boolean;
    /**
     * @generated from protobuf field: spec.MsgOptSelf b = 3;
     */
    b?: MsgOptSelf;
}
// @generated message type with reflection information, may provide speed optimized methods
class MsgOptSelf$Type extends MessageType<MsgOptSelf> {
    constructor() {
        super("spec.MsgOptSelf", [
            { no: 1, name: "a", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "spec.fld_opt_str": "y" } },
            { no: 3, name: "b", kind: "message", T: () => MsgOptSelf, options: { "spec.fld_opt_msg": { a: true, b: { a: true } } } }
        ], { "spec.msg_opt_str": "x", "spec.msg_opt_msg": { a: true, b: { a: true } } });
    }
    create(value?: PartialMessage<MsgOptSelf>): MsgOptSelf {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.a = false;
        if (value !== undefined)
            reflectionMergePartial<MsgOptSelf>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgOptSelf): MsgOptSelf {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool a */ 1:
                    message.a = reader.bool();
                    break;
                case /* spec.MsgOptSelf b */ 3:
                    message.b = MsgOptSelf.internalBinaryRead(reader, reader.uint32(), options, message.b);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgOptSelf, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool a = 1; */
        if (message.a !== false)
            writer.tag(1, WireType.Varint).bool(message.a);
        /* spec.MsgOptSelf b = 3; */
        if (message.b)
            MsgOptSelf.internalBinaryWrite(message.b, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message spec.MsgOptSelf
 */
export const MsgOptSelf = new MsgOptSelf$Type();

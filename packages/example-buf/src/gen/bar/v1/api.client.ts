// @generated by protobuf-ts 2.11.1 with parameter long_type_string
// @generated from protobuf file "bar/v1/api.proto" (package "bar.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { BarService } from "./api";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetResponse } from "./api";
import type { GetRequest } from "./api";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service bar.v1.BarService
 */
export interface IBarServiceClient {
    /**
     * @generated from protobuf rpc: Get
     */
    get(input: GetRequest, options?: RpcOptions): UnaryCall<GetRequest, GetResponse>;
}
/**
 * @generated from protobuf service bar.v1.BarService
 */
export class BarServiceClient implements IBarServiceClient, ServiceInfo {
    typeName = BarService.typeName;
    methods = BarService.methods;
    options = BarService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Get
     */
    get(input: GetRequest, options?: RpcOptions): UnaryCall<GetRequest, GetResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetRequest, GetResponse>("unary", this._transport, method, opt, input);
    }
}

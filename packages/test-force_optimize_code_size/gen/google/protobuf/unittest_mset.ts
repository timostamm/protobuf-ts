// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size
// @generated from protobuf file "google/protobuf/unittest_mset.proto" (package "protobuf_unittest", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd
//
//
// Author: kenton@google.com (Kenton Varda)
//  Based on original Protocol Buffers design by
//  Sanjay Ghemawat, Jeff Dean, and others.
//
// This file is similar to unittest_mset_wire_format.proto, but does not
// have a TestMessageSet, so it can be downgraded to proto1.
//
import { MessageType } from "@protobuf-ts/runtime";
import { TestMessageSet } from "./unittest_mset_wire_format";
/**
 * @generated from protobuf message protobuf_unittest.TestMessageSetContainer
 */
export interface TestMessageSetContainer {
    /**
     * @generated from protobuf field: optional proto2_wireformat_unittest.TestMessageSet message_set = 1;
     */
    messageSet?: TestMessageSet;
}
/**
 * @generated from protobuf message protobuf_unittest.NestedTestMessageSetContainer
 */
export interface NestedTestMessageSetContainer {
    /**
     * @generated from protobuf field: optional protobuf_unittest.TestMessageSetContainer container = 1;
     */
    container?: TestMessageSetContainer;
    /**
     * @generated from protobuf field: optional protobuf_unittest.NestedTestMessageSetContainer child = 2;
     */
    child?: NestedTestMessageSetContainer;
    /**
     * @generated from protobuf field: optional protobuf_unittest.NestedTestMessageSetContainer lazy_child = 3;
     */
    lazyChild?: NestedTestMessageSetContainer;
}
/**
 * @generated from protobuf message protobuf_unittest.NestedTestInt
 */
export interface NestedTestInt {
    /**
     * @generated from protobuf field: optional fixed32 a = 1;
     */
    a?: number;
    /**
     * @generated from protobuf field: optional int32 b = 3;
     */
    b?: number;
    /**
     * @generated from protobuf field: optional protobuf_unittest.NestedTestInt child = 2;
     */
    child?: NestedTestInt;
}
/**
 * @generated from protobuf message protobuf_unittest.TestMessageSetExtension1
 */
export interface TestMessageSetExtension1 {
    /**
     * @generated from protobuf field: optional int32 i = 15;
     */
    i?: number;
    /**
     * @generated from protobuf field: optional proto2_wireformat_unittest.TestMessageSet recursive = 16;
     */
    recursive?: TestMessageSet;
    /**
     * @generated from protobuf field: optional string test_aliasing = 17;
     */
    testAliasing?: string;
}
/**
 * @generated from protobuf message protobuf_unittest.TestMessageSetExtension2
 */
export interface TestMessageSetExtension2 {
    /**
     * @generated from protobuf field: optional string str = 25;
     */
    str?: string;
}
/**
 * @generated from protobuf message protobuf_unittest.TestMessageSetExtension3
 */
export interface TestMessageSetExtension3 {
    /**
     * @generated from protobuf field: optional protobuf_unittest.NestedTestInt msg = 35;
     */
    msg?: NestedTestInt;
    /**
     * @generated from protobuf field: int32 required_int = 36;
     */
    requiredInt: number;
}
// This message was used to generate
// //net/proto2/python/internal/testdata/message_set_message, but is commented
// out since it must not actually exist in code, to simulate an "unknown"
// extension.
// message TestMessageSetUnknownExtension {
//   extend TestMessageSet {
//     optional TestMessageSetUnknownExtension message_set_extension = 56141421;
//   }
//   optional int64 a = 1;
// }

/**
 * MessageSet wire format is equivalent to this.
 *
 * @generated from protobuf message protobuf_unittest.RawMessageSet
 */
export interface RawMessageSet {
}
/**
 * @generated from protobuf message protobuf_unittest.RawMessageSet.Item
 */
export interface RawMessageSet_Item {
    /**
     * @generated from protobuf field: int32 type_id = 2;
     */
    typeId: number;
    /**
     * @generated from protobuf field: bytes message = 3;
     */
    message: Uint8Array;
}
// @generated message type with reflection information, may provide speed optimized methods
class TestMessageSetContainer$Type extends MessageType<TestMessageSetContainer> {
    constructor() {
        super("protobuf_unittest.TestMessageSetContainer", [
            { no: 1, name: "message_set", kind: "message", T: () => TestMessageSet }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestMessageSetContainer
 */
export const TestMessageSetContainer = new TestMessageSetContainer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NestedTestMessageSetContainer$Type extends MessageType<NestedTestMessageSetContainer> {
    constructor() {
        super("protobuf_unittest.NestedTestMessageSetContainer", [
            { no: 1, name: "container", kind: "message", T: () => TestMessageSetContainer },
            { no: 2, name: "child", kind: "message", T: () => NestedTestMessageSetContainer },
            { no: 3, name: "lazy_child", kind: "message", T: () => NestedTestMessageSetContainer }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.NestedTestMessageSetContainer
 */
export const NestedTestMessageSetContainer = new NestedTestMessageSetContainer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NestedTestInt$Type extends MessageType<NestedTestInt> {
    constructor() {
        super("protobuf_unittest.NestedTestInt", [
            { no: 1, name: "a", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 3, name: "b", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "child", kind: "message", T: () => NestedTestInt }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.NestedTestInt
 */
export const NestedTestInt = new NestedTestInt$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestMessageSetExtension1$Type extends MessageType<TestMessageSetExtension1> {
    constructor() {
        super("protobuf_unittest.TestMessageSetExtension1", [
            { no: 15, name: "i", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 16, name: "recursive", kind: "message", T: () => TestMessageSet },
            { no: 17, name: "test_aliasing", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestMessageSetExtension1
 */
export const TestMessageSetExtension1 = new TestMessageSetExtension1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestMessageSetExtension2$Type extends MessageType<TestMessageSetExtension2> {
    constructor() {
        super("protobuf_unittest.TestMessageSetExtension2", [
            { no: 25, name: "str", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestMessageSetExtension2
 */
export const TestMessageSetExtension2 = new TestMessageSetExtension2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestMessageSetExtension3$Type extends MessageType<TestMessageSetExtension3> {
    constructor() {
        super("protobuf_unittest.TestMessageSetExtension3", [
            { no: 35, name: "msg", kind: "message", T: () => NestedTestInt },
            { no: 36, name: "required_int", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestMessageSetExtension3
 */
export const TestMessageSetExtension3 = new TestMessageSetExtension3$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RawMessageSet$Type extends MessageType<RawMessageSet> {
    constructor() {
        super("protobuf_unittest.RawMessageSet", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.RawMessageSet
 */
export const RawMessageSet = new RawMessageSet$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RawMessageSet_Item$Type extends MessageType<RawMessageSet_Item> {
    constructor() {
        super("protobuf_unittest.RawMessageSet.Item", [
            { no: 2, name: "type_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "message", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.RawMessageSet.Item
 */
export const RawMessageSet_Item = new RawMessageSet_Item$Type();

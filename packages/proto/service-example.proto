syntax = "proto3";
package spec;


service ExampleService {
    // An example unary call.
    rpc Unary (ExampleRequest) returns (ExampleResponse);

    // An example server-streaming call.
    rpc ServerStream (ExampleRequest) returns (stream ExampleResponse);

    // An example client-streaming call.
    rpc ClientStream (stream ExampleRequest) returns (ExampleResponse);

    // An example bidi-streaming call.
    rpc Bidi (stream ExampleRequest) returns (stream ExampleResponse);
}

message ExampleRequest {

    // any text
    string question = 1;

    // the server should simulate an error in the requested way
    FailRequest please_fail = 2;

    // the server should delay it's response for this amount of milliseconds
    int32 please_delay_response_ms = 3;

    // by default, the server always writes some custom response headers
    bool disable_sending_example_response_headers = 4;
}

message ExampleResponse {
    // any text
    string answer = 1;

    // contains the request headers that the server received
    map<string, string> your_request_headers = 2;

    // contains the deadline that the server received
    string your_deadline = 3;

    // the failure requested
    FailRequest your_fail_request = 4;
}

enum FailRequest {
    // don't fail
    FAIL_REQUEST_NONE = 0;

    // send an error status trailer after sending a message
    MESSAGE_THEN_ERROR_STATUS = 1;

    // send an error status, don't send any message
    ERROR_STATUS_ONLY = 2;
}

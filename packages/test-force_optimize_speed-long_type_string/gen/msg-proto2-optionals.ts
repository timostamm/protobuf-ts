// @generated by protobuf-ts 2.9.5 with parameter force_optimize_speed,long_type_string
// @generated from protobuf file "msg-proto2-optionals.proto" (package "spec", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message spec.Proto2OptionalsMessage
 */
export interface Proto2OptionalsMessage {
    /**
     * @generated from protobuf field: optional string string_field = 1;
     */
    stringField?: string;
    /**
     * @generated from protobuf field: optional bytes bytes_field = 2;
     */
    bytesField?: Uint8Array;
    /**
     * @generated from protobuf field: optional spec.Proto2OptionalsMessage.TestEnum enum_field = 3;
     */
    enumField?: Proto2OptionalsMessage_TestEnum;
    /**
     * @generated from protobuf field: optional spec.Proto2OptionalsMessage.TestMessage message_field = 4;
     */
    messageField?: Proto2OptionalsMessage_TestMessage;
}
/**
 * @generated from protobuf message spec.Proto2OptionalsMessage.TestMessage
 */
export interface Proto2OptionalsMessage_TestMessage {
    /**
     * @generated from protobuf field: string field = 1;
     */
    field: string;
}
/**
 * @generated from protobuf enum spec.Proto2OptionalsMessage.TestEnum
 */
export enum Proto2OptionalsMessage_TestEnum {
    /**
     * @generated from protobuf enum value: ANY = 0;
     */
    ANY = 0,
    /**
     * @generated from protobuf enum value: YES = 1;
     */
    YES = 1,
    /**
     * @generated from protobuf enum value: NO = 2;
     */
    NO = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class Proto2OptionalsMessage$Type extends MessageType<Proto2OptionalsMessage> {
    constructor() {
        super("spec.Proto2OptionalsMessage", [
            { no: 1, name: "string_field", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "bytes_field", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "enum_field", kind: "enum", opt: true, T: () => ["spec.Proto2OptionalsMessage.TestEnum", Proto2OptionalsMessage_TestEnum] },
            { no: 4, name: "message_field", kind: "message", T: () => Proto2OptionalsMessage_TestMessage }
        ]);
    }
    create(value?: PartialMessage<Proto2OptionalsMessage>): Proto2OptionalsMessage {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Proto2OptionalsMessage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Proto2OptionalsMessage): Proto2OptionalsMessage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string string_field */ 1:
                    message.stringField = reader.string();
                    break;
                case /* optional bytes bytes_field */ 2:
                    message.bytesField = reader.bytes();
                    break;
                case /* optional spec.Proto2OptionalsMessage.TestEnum enum_field */ 3:
                    message.enumField = reader.int32();
                    break;
                case /* optional spec.Proto2OptionalsMessage.TestMessage message_field */ 4:
                    message.messageField = Proto2OptionalsMessage_TestMessage.internalBinaryRead(reader, reader.uint32(), options, message.messageField);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Proto2OptionalsMessage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string string_field = 1; */
        if (message.stringField !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.stringField);
        /* optional bytes bytes_field = 2; */
        if (message.bytesField !== undefined)
            writer.tag(2, WireType.LengthDelimited).bytes(message.bytesField);
        /* optional spec.Proto2OptionalsMessage.TestEnum enum_field = 3; */
        if (message.enumField !== undefined)
            writer.tag(3, WireType.Varint).int32(message.enumField);
        /* optional spec.Proto2OptionalsMessage.TestMessage message_field = 4; */
        if (message.messageField)
            Proto2OptionalsMessage_TestMessage.internalBinaryWrite(message.messageField, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message spec.Proto2OptionalsMessage
 */
export const Proto2OptionalsMessage = new Proto2OptionalsMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Proto2OptionalsMessage_TestMessage$Type extends MessageType<Proto2OptionalsMessage_TestMessage> {
    constructor() {
        super("spec.Proto2OptionalsMessage.TestMessage", [
            { no: 1, name: "field", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Proto2OptionalsMessage_TestMessage>): Proto2OptionalsMessage_TestMessage {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.field = "";
        if (value !== undefined)
            reflectionMergePartial<Proto2OptionalsMessage_TestMessage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Proto2OptionalsMessage_TestMessage): Proto2OptionalsMessage_TestMessage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string field */ 1:
                    message.field = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Proto2OptionalsMessage_TestMessage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string field = 1; */
        if (message.field !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.field);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message spec.Proto2OptionalsMessage.TestMessage
 */
export const Proto2OptionalsMessage_TestMessage = new Proto2OptionalsMessage_TestMessage$Type();

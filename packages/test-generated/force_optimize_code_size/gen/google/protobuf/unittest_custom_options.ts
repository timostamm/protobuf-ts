// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size
// @generated from protobuf file "google/protobuf/unittest_custom_options.proto" (package "protobuf_unittest", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//
// Author: benjy@google.com (Benjy Weinberger)
//  Based on original Protocol Buffers design by
//  Sanjay Ghemawat, Jeff Dean, and others.
//
// A proto file used to test the "custom options" feature of google.protobuf.
//
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { FileOptions } from "./descriptor";
/**
 * A test message with custom options at all possible locations (and also some
 * regular options, to make sure they interact nicely).
 *
 * @generated from protobuf message protobuf_unittest.TestMessageWithCustomOptions
 */
export interface TestMessageWithCustomOptions {
    /**
     * @generated from protobuf field: optional string field1 = 1;
     */
    field1?: string;
    /**
     * @generated from protobuf oneof: AnOneof
     */
    anOneof: {
        oneofKind: "oneofField";
        /**
         * @generated from protobuf field: int32 oneof_field = 2;
         */
        oneofField: number;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf enum protobuf_unittest.TestMessageWithCustomOptions.AnEnum
 */
export enum TestMessageWithCustomOptions_AnEnum {
    /**
     * @generated synthetic value - protobuf-ts requires all enums to have a 0 value
     */
    UNSPECIFIED$ = 0,
    /**
     * @generated from protobuf enum value: ANENUM_VAL1 = 1;
     */
    ANENUM_VAL1 = 1,
    /**
     * @generated from protobuf enum value: ANENUM_VAL2 = 2;
     */
    ANENUM_VAL2 = 2
}
/**
 * A test RPC service with custom options at all possible locations (and also
 * some regular options, to make sure they interact nicely).
 *
 * @generated from protobuf message protobuf_unittest.CustomOptionFooRequest
 */
export interface CustomOptionFooRequest {
}
/**
 * @generated from protobuf message protobuf_unittest.CustomOptionFooResponse
 */
export interface CustomOptionFooResponse {
}
/**
 * @generated from protobuf message protobuf_unittest.CustomOptionFooClientMessage
 */
export interface CustomOptionFooClientMessage {
}
/**
 * @generated from protobuf message protobuf_unittest.CustomOptionFooServerMessage
 */
export interface CustomOptionFooServerMessage {
}
// Options of every possible field type, so we can test them all exhaustively.

/**
 * @generated from protobuf message protobuf_unittest.DummyMessageContainingEnum
 */
export interface DummyMessageContainingEnum {
}
/**
 * @generated from protobuf enum protobuf_unittest.DummyMessageContainingEnum.TestEnumType
 */
export enum DummyMessageContainingEnum_TestEnumType {
    /**
     * @generated synthetic value - protobuf-ts requires all enums to have a 0 value
     */
    UNSPECIFIED$ = 0,
    /**
     * @generated from protobuf enum value: TEST_OPTION_ENUM_TYPE1 = 22;
     */
    TEST_OPTION_ENUM_TYPE1 = 22,
    /**
     * @generated from protobuf enum value: TEST_OPTION_ENUM_TYPE2 = -23;
     */
    TEST_OPTION_ENUM_TYPE2 = -23
}
/**
 * @generated from protobuf message protobuf_unittest.DummyMessageInvalidAsOptionType
 */
export interface DummyMessageInvalidAsOptionType {
}
/**
 * @generated from protobuf message protobuf_unittest.CustomOptionMinIntegerValues
 */
export interface CustomOptionMinIntegerValues {
}
/**
 * @generated from protobuf message protobuf_unittest.CustomOptionMaxIntegerValues
 */
export interface CustomOptionMaxIntegerValues {
}
/**
 * @generated from protobuf message protobuf_unittest.CustomOptionOtherValues
 */
export interface CustomOptionOtherValues {
}
/**
 * @generated from protobuf message protobuf_unittest.SettingRealsFromPositiveInts
 */
export interface SettingRealsFromPositiveInts {
}
/**
 * @generated from protobuf message protobuf_unittest.SettingRealsFromNegativeInts
 */
export interface SettingRealsFromNegativeInts {
}
// Options of complex message types, themselves combined and extended in
// various ways.

/**
 * @generated from protobuf message protobuf_unittest.ComplexOptionType1
 */
export interface ComplexOptionType1 {
    /**
     * @generated from protobuf field: optional int32 foo = 1;
     */
    foo?: number;
    /**
     * @generated from protobuf field: optional int32 foo2 = 2;
     */
    foo2?: number;
    /**
     * @generated from protobuf field: optional int32 foo3 = 3;
     */
    foo3?: number;
    /**
     * @generated from protobuf field: repeated int32 foo4 = 4;
     */
    foo4: number[];
}
/**
 * @generated from protobuf message protobuf_unittest.ComplexOptionType2
 */
export interface ComplexOptionType2 {
    /**
     * @generated from protobuf field: optional protobuf_unittest.ComplexOptionType1 bar = 1;
     */
    bar?: ComplexOptionType1;
    /**
     * @generated from protobuf field: optional int32 baz = 2;
     */
    baz?: number;
    /**
     * @generated from protobuf field: optional protobuf_unittest.ComplexOptionType2.ComplexOptionType4 fred = 3;
     */
    fred?: ComplexOptionType2_ComplexOptionType4;
    /**
     * @generated from protobuf field: repeated protobuf_unittest.ComplexOptionType2.ComplexOptionType4 barney = 4;
     */
    barney: ComplexOptionType2_ComplexOptionType4[];
}
/**
 * @generated from protobuf message protobuf_unittest.ComplexOptionType2.ComplexOptionType4
 */
export interface ComplexOptionType2_ComplexOptionType4 {
    /**
     * @generated from protobuf field: optional int32 waldo = 1;
     */
    waldo?: number;
}
/**
 * @generated from protobuf message protobuf_unittest.ComplexOptionType3
 */
export interface ComplexOptionType3 {
    /**
     * @generated from protobuf field: optional int32 qux = 1;
     */
    qux?: number;
}
/**
 * @generated from protobuf message protobuf_unittest.ComplexOptionType3.ComplexOptionType5
 */
export interface ComplexOptionType3_ComplexOptionType5 {
    /**
     * @generated from protobuf field: optional int32 plugh = 3;
     */
    plugh?: number;
}
/**
 * @generated from protobuf message protobuf_unittest.ComplexOpt6
 */
export interface ComplexOpt6 {
    /**
     * @generated from protobuf field: optional int32 xyzzy = 7593951;
     */
    xyzzy?: number;
}
/**
 * Note that we try various different ways of naming the same extension.
 *
 * @generated from protobuf message protobuf_unittest.VariousComplexOptions
 */
export interface VariousComplexOptions {
}
// ------------------------------------------------------
// Definitions for testing aggregate option parsing.
// See descriptor_unittest.cc.

/**
 * @generated from protobuf message protobuf_unittest.AggregateMessageSet
 */
export interface AggregateMessageSet {
}
/**
 * @generated from protobuf message protobuf_unittest.AggregateMessageSetElement
 */
export interface AggregateMessageSetElement {
    /**
     * @generated from protobuf field: optional string s = 1;
     */
    s?: string;
}
/**
 * A helper type used to test aggregate option parsing
 *
 * @generated from protobuf message protobuf_unittest.Aggregate
 */
export interface Aggregate {
    /**
     * @generated from protobuf field: optional int32 i = 1;
     */
    i?: number;
    /**
     * @generated from protobuf field: optional string s = 2;
     */
    s?: string;
    /**
     * A nested object
     *
     * @generated from protobuf field: optional protobuf_unittest.Aggregate sub = 3;
     */
    sub?: Aggregate;
    /**
     * To test the parsing of extensions inside aggregate values
     *
     * @generated from protobuf field: optional google.protobuf.FileOptions file = 4;
     */
    file?: FileOptions;
    /**
     * An embedded message set
     *
     * @generated from protobuf field: optional protobuf_unittest.AggregateMessageSet mset = 5;
     */
    mset?: AggregateMessageSet;
}
/**
 * @generated from protobuf message protobuf_unittest.AggregateMessage
 */
export interface AggregateMessage {
    /**
     * @generated from protobuf field: optional int32 fieldname = 1;
     */
    fieldname?: number;
}
/**
 * Test custom options for nested type.
 *
 * @generated from protobuf message protobuf_unittest.NestedOptionType
 */
export interface NestedOptionType {
}
/**
 * @generated from protobuf message protobuf_unittest.NestedOptionType.NestedMessage
 */
export interface NestedOptionType_NestedMessage {
    /**
     * @generated from protobuf field: optional int32 nested_field = 1;
     */
    nestedField?: number;
}
/**
 * @generated from protobuf enum protobuf_unittest.NestedOptionType.NestedEnum
 */
export enum NestedOptionType_NestedEnum {
    /**
     * @generated synthetic value - protobuf-ts requires all enums to have a 0 value
     */
    UNSPECIFIED$ = 0,
    /**
     * @generated from protobuf enum value: NESTED_ENUM_VALUE = 1;
     */
    VALUE = 1
}
/**
 * Custom message option that has a required enum field.
 * WARNING: this is strongly discouraged!
 *
 * @generated from protobuf message protobuf_unittest.OldOptionType
 */
export interface OldOptionType {
    /**
     * @generated from protobuf field: protobuf_unittest.OldOptionType.TestEnum value = 1;
     */
    value: OldOptionType_TestEnum;
}
/**
 * @generated from protobuf enum protobuf_unittest.OldOptionType.TestEnum
 */
export enum OldOptionType_TestEnum {
    /**
     * @generated from protobuf enum value: OLD_VALUE = 0;
     */
    OLD_VALUE = 0
}
/**
 * Updated version of the custom option above.
 *
 * @generated from protobuf message protobuf_unittest.NewOptionType
 */
export interface NewOptionType {
    /**
     * @generated from protobuf field: protobuf_unittest.NewOptionType.TestEnum value = 1;
     */
    value: NewOptionType_TestEnum;
}
/**
 * @generated from protobuf enum protobuf_unittest.NewOptionType.TestEnum
 */
export enum NewOptionType_TestEnum {
    /**
     * @generated from protobuf enum value: OLD_VALUE = 0;
     */
    OLD_VALUE = 0,
    /**
     * @generated from protobuf enum value: NEW_VALUE = 1;
     */
    NEW_VALUE = 1
}
/**
 * Test message using the "required_enum_opt" option defined above.
 *
 * @generated from protobuf message protobuf_unittest.TestMessageWithRequiredEnumOption
 */
export interface TestMessageWithRequiredEnumOption {
}
/**
 * @generated from protobuf enum protobuf_unittest.MethodOpt1
 */
export enum MethodOpt1 {
    /**
     * @generated synthetic value - protobuf-ts requires all enums to have a 0 value
     */
    UNSPECIFIED$ = 0,
    /**
     * @generated from protobuf enum value: METHODOPT1_VAL1 = 1;
     */
    METHODOPT1_VAL1 = 1,
    /**
     * @generated from protobuf enum value: METHODOPT1_VAL2 = 2;
     */
    METHODOPT1_VAL2 = 2
}
/**
 * @generated from protobuf enum protobuf_unittest.AggregateEnum
 */
export enum AggregateEnum {
    /**
     * @generated synthetic value - protobuf-ts requires all enums to have a 0 value
     */
    UNSPECIFIED$ = 0,
    /**
     * @generated from protobuf enum value: VALUE = 1;
     */
    VALUE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class TestMessageWithCustomOptions$Type extends MessageType<TestMessageWithCustomOptions> {
    constructor() {
        super("protobuf_unittest.TestMessageWithCustomOptions", [
            { no: 1, name: "field1", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "protobuf_unittest.field_opt1": "8765432109" } },
            { no: 2, name: "oneof_field", kind: "scalar", oneof: "anOneof", T: 5 /*ScalarType.INT32*/ }
        ], { "protobuf_unittest.message_opt1": -56 });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestMessageWithCustomOptions
 */
export const TestMessageWithCustomOptions = new TestMessageWithCustomOptions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomOptionFooRequest$Type extends MessageType<CustomOptionFooRequest> {
    constructor() {
        super("protobuf_unittest.CustomOptionFooRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.CustomOptionFooRequest
 */
export const CustomOptionFooRequest = new CustomOptionFooRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomOptionFooResponse$Type extends MessageType<CustomOptionFooResponse> {
    constructor() {
        super("protobuf_unittest.CustomOptionFooResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.CustomOptionFooResponse
 */
export const CustomOptionFooResponse = new CustomOptionFooResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomOptionFooClientMessage$Type extends MessageType<CustomOptionFooClientMessage> {
    constructor() {
        super("protobuf_unittest.CustomOptionFooClientMessage", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.CustomOptionFooClientMessage
 */
export const CustomOptionFooClientMessage = new CustomOptionFooClientMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomOptionFooServerMessage$Type extends MessageType<CustomOptionFooServerMessage> {
    constructor() {
        super("protobuf_unittest.CustomOptionFooServerMessage", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.CustomOptionFooServerMessage
 */
export const CustomOptionFooServerMessage = new CustomOptionFooServerMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DummyMessageContainingEnum$Type extends MessageType<DummyMessageContainingEnum> {
    constructor() {
        super("protobuf_unittest.DummyMessageContainingEnum", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.DummyMessageContainingEnum
 */
export const DummyMessageContainingEnum = new DummyMessageContainingEnum$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DummyMessageInvalidAsOptionType$Type extends MessageType<DummyMessageInvalidAsOptionType> {
    constructor() {
        super("protobuf_unittest.DummyMessageInvalidAsOptionType", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.DummyMessageInvalidAsOptionType
 */
export const DummyMessageInvalidAsOptionType = new DummyMessageInvalidAsOptionType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomOptionMinIntegerValues$Type extends MessageType<CustomOptionMinIntegerValues> {
    constructor() {
        super("protobuf_unittest.CustomOptionMinIntegerValues", [], { "protobuf_unittest.bool_opt": false, "protobuf_unittest.int32_opt": -2147483648, "protobuf_unittest.int64_opt": "-9223372036854775808", "protobuf_unittest.uint32_opt": 0, "protobuf_unittest.uint64_opt": "0", "protobuf_unittest.sint32_opt": -2147483648, "protobuf_unittest.sint64_opt": "-9223372036854775808", "protobuf_unittest.fixed32_opt": 0, "protobuf_unittest.fixed64_opt": "0", "protobuf_unittest.sfixed32_opt": -2147483648, "protobuf_unittest.sfixed64_opt": "-9223372036854775808" });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.CustomOptionMinIntegerValues
 */
export const CustomOptionMinIntegerValues = new CustomOptionMinIntegerValues$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomOptionMaxIntegerValues$Type extends MessageType<CustomOptionMaxIntegerValues> {
    constructor() {
        super("protobuf_unittest.CustomOptionMaxIntegerValues", [], { "protobuf_unittest.bool_opt": true, "protobuf_unittest.int32_opt": 2147483647, "protobuf_unittest.int64_opt": "9223372036854775807", "protobuf_unittest.uint32_opt": 4294967295, "protobuf_unittest.uint64_opt": "18446744073709551615", "protobuf_unittest.sint32_opt": 2147483647, "protobuf_unittest.sint64_opt": "9223372036854775807", "protobuf_unittest.fixed32_opt": 4294967295, "protobuf_unittest.fixed64_opt": "18446744073709551615", "protobuf_unittest.sfixed32_opt": 2147483647, "protobuf_unittest.sfixed64_opt": "9223372036854775807" });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.CustomOptionMaxIntegerValues
 */
export const CustomOptionMaxIntegerValues = new CustomOptionMaxIntegerValues$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomOptionOtherValues$Type extends MessageType<CustomOptionOtherValues> {
    constructor() {
        super("protobuf_unittest.CustomOptionOtherValues", [], { "protobuf_unittest.int32_opt": -100, "protobuf_unittest.float_opt": 12.34567928314209, "protobuf_unittest.double_opt": 1.2345678901234567, "protobuf_unittest.string_opt": "Hello, \"World\"", "protobuf_unittest.bytes_opt": "SGVsbG8AV29ybGQ=", "protobuf_unittest.enum_opt": "TEST_OPTION_ENUM_TYPE2" });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.CustomOptionOtherValues
 */
export const CustomOptionOtherValues = new CustomOptionOtherValues$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingRealsFromPositiveInts$Type extends MessageType<SettingRealsFromPositiveInts> {
    constructor() {
        super("protobuf_unittest.SettingRealsFromPositiveInts", [], { "protobuf_unittest.float_opt": 12, "protobuf_unittest.double_opt": 154 });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.SettingRealsFromPositiveInts
 */
export const SettingRealsFromPositiveInts = new SettingRealsFromPositiveInts$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SettingRealsFromNegativeInts$Type extends MessageType<SettingRealsFromNegativeInts> {
    constructor() {
        super("protobuf_unittest.SettingRealsFromNegativeInts", [], { "protobuf_unittest.float_opt": -12, "protobuf_unittest.double_opt": -154 });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.SettingRealsFromNegativeInts
 */
export const SettingRealsFromNegativeInts = new SettingRealsFromNegativeInts$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComplexOptionType1$Type extends MessageType<ComplexOptionType1> {
    constructor() {
        super("protobuf_unittest.ComplexOptionType1", [
            { no: 1, name: "foo", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "foo2", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "foo3", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "foo4", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.ComplexOptionType1
 */
export const ComplexOptionType1 = new ComplexOptionType1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComplexOptionType2$Type extends MessageType<ComplexOptionType2> {
    constructor() {
        super("protobuf_unittest.ComplexOptionType2", [
            { no: 1, name: "bar", kind: "message", T: () => ComplexOptionType1 },
            { no: 2, name: "baz", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "fred", kind: "message", T: () => ComplexOptionType2_ComplexOptionType4 },
            { no: 4, name: "barney", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ComplexOptionType2_ComplexOptionType4 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.ComplexOptionType2
 */
export const ComplexOptionType2 = new ComplexOptionType2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComplexOptionType2_ComplexOptionType4$Type extends MessageType<ComplexOptionType2_ComplexOptionType4> {
    constructor() {
        super("protobuf_unittest.ComplexOptionType2.ComplexOptionType4", [
            { no: 1, name: "waldo", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.ComplexOptionType2.ComplexOptionType4
 */
export const ComplexOptionType2_ComplexOptionType4 = new ComplexOptionType2_ComplexOptionType4$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComplexOptionType3$Type extends MessageType<ComplexOptionType3> {
    constructor() {
        super("protobuf_unittest.ComplexOptionType3", [
            { no: 1, name: "qux", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.ComplexOptionType3
 */
export const ComplexOptionType3 = new ComplexOptionType3$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComplexOptionType3_ComplexOptionType5$Type extends MessageType<ComplexOptionType3_ComplexOptionType5> {
    constructor() {
        super("protobuf_unittest.ComplexOptionType3.ComplexOptionType5", [
            { no: 3, name: "plugh", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.ComplexOptionType3.ComplexOptionType5
 */
export const ComplexOptionType3_ComplexOptionType5 = new ComplexOptionType3_ComplexOptionType5$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComplexOpt6$Type extends MessageType<ComplexOpt6> {
    constructor() {
        super("protobuf_unittest.ComplexOpt6", [
            { no: 7593951, name: "xyzzy", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.ComplexOpt6
 */
export const ComplexOpt6 = new ComplexOpt6$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VariousComplexOptions$Type extends MessageType<VariousComplexOptions> {
    constructor() {
        super("protobuf_unittest.VariousComplexOptions", [], { "protobuf_unittest.complex_opt1": { foo: 42, foo4: [99, 88] }, "protobuf_unittest.complex_opt2": { bar: { foo: 743 }, baz: 987, fred: { waldo: 321 }, barney: [{ waldo: 101 }, { waldo: 212 }] }, "protobuf_unittest.complex_opt3": { qux: 9 } });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.VariousComplexOptions
 */
export const VariousComplexOptions = new VariousComplexOptions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AggregateMessageSet$Type extends MessageType<AggregateMessageSet> {
    constructor() {
        super("protobuf_unittest.AggregateMessageSet", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.AggregateMessageSet
 */
export const AggregateMessageSet = new AggregateMessageSet$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AggregateMessageSetElement$Type extends MessageType<AggregateMessageSetElement> {
    constructor() {
        super("protobuf_unittest.AggregateMessageSetElement", [
            { no: 1, name: "s", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.AggregateMessageSetElement
 */
export const AggregateMessageSetElement = new AggregateMessageSetElement$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Aggregate$Type extends MessageType<Aggregate> {
    constructor() {
        super("protobuf_unittest.Aggregate", [
            { no: 1, name: "i", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "s", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sub", kind: "message", T: () => Aggregate },
            { no: 4, name: "file", kind: "message", T: () => FileOptions },
            { no: 5, name: "mset", kind: "message", T: () => AggregateMessageSet }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.Aggregate
 */
export const Aggregate = new Aggregate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AggregateMessage$Type extends MessageType<AggregateMessage> {
    constructor() {
        super("protobuf_unittest.AggregateMessage", [
            { no: 1, name: "fieldname", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "protobuf_unittest.fieldopt": { s: "FieldAnnotation" } } }
        ], { "protobuf_unittest.msgopt": { i: 101, s: "MessageAnnotation" } });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.AggregateMessage
 */
export const AggregateMessage = new AggregateMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NestedOptionType$Type extends MessageType<NestedOptionType> {
    constructor() {
        super("protobuf_unittest.NestedOptionType", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.NestedOptionType
 */
export const NestedOptionType = new NestedOptionType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NestedOptionType_NestedMessage$Type extends MessageType<NestedOptionType_NestedMessage> {
    constructor() {
        super("protobuf_unittest.NestedOptionType.NestedMessage", [
            { no: 1, name: "nested_field", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "protobuf_unittest.field_opt1": "1002" } }
        ], { "protobuf_unittest.message_opt1": 1001 });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.NestedOptionType.NestedMessage
 */
export const NestedOptionType_NestedMessage = new NestedOptionType_NestedMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OldOptionType$Type extends MessageType<OldOptionType> {
    constructor() {
        super("protobuf_unittest.OldOptionType", [
            { no: 1, name: "value", kind: "enum", T: () => ["protobuf_unittest.OldOptionType.TestEnum", OldOptionType_TestEnum] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.OldOptionType
 */
export const OldOptionType = new OldOptionType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NewOptionType$Type extends MessageType<NewOptionType> {
    constructor() {
        super("protobuf_unittest.NewOptionType", [
            { no: 1, name: "value", kind: "enum", T: () => ["protobuf_unittest.NewOptionType.TestEnum", NewOptionType_TestEnum] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.NewOptionType
 */
export const NewOptionType = new NewOptionType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestMessageWithRequiredEnumOption$Type extends MessageType<TestMessageWithRequiredEnumOption> {
    constructor() {
        super("protobuf_unittest.TestMessageWithRequiredEnumOption", [], { "protobuf_unittest.required_enum_opt": {} });
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestMessageWithRequiredEnumOption
 */
export const TestMessageWithRequiredEnumOption = new TestMessageWithRequiredEnumOption$Type();
/**
 * @generated ServiceType for protobuf service protobuf_unittest.TestServiceWithCustomOptions
 */
export const TestServiceWithCustomOptions = new ServiceType("protobuf_unittest.TestServiceWithCustomOptions", [
    { name: "Foo", options: { "protobuf_unittest.method_opt1": "METHODOPT1_VAL2" }, I: CustomOptionFooRequest, O: CustomOptionFooResponse }
], { "protobuf_unittest.service_opt1": "-9876543210" });
/**
 * @generated ServiceType for protobuf service protobuf_unittest.AggregateService
 */
export const AggregateService = new ServiceType("protobuf_unittest.AggregateService", [
    { name: "Method", options: { "protobuf_unittest.methodopt": { s: "MethodAnnotation" } }, I: AggregateMessage, O: AggregateMessage }
], { "protobuf_unittest.serviceopt": { s: "ServiceAnnotation" } });

// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size
// @generated from protobuf file "google/protobuf/util/internal/testdata/anys.proto" (package "proto_util_converter.testing", syntax proto3)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Int32Value } from "../../../wrappers";
import { Duration } from "../../../duration";
import { Timestamp } from "../../../timestamp";
import { Struct } from "../../../struct";
import { DoubleValue } from "../../../wrappers";
import { Any } from "../../../any";
/**
 * Top-level test cases proto used by MarshallingTest. See description
 * at the top of the class MarshallingTest for details on how to write
 * test cases.
 *
 * @generated from protobuf message proto_util_converter.testing.AnyTestCases
 */
export interface AnyTestCases {
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper empty_any = 1;
     */
    emptyAny?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper type_only_any = 2;
     */
    typeOnlyAny?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper wrapper_any = 3;
     */
    wrapperAny?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_timestamp_value = 4;
     */
    anyWithTimestampValue?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_duration_value = 5;
     */
    anyWithDurationValue?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_struct_value = 6;
     */
    anyWithStructValue?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper recursive_any = 7;
     */
    recursiveAny?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_message_value = 8;
     */
    anyWithMessageValue?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_nested_message = 9;
     */
    anyWithNestedMessage?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_message_with_wrapper_type = 10;
     */
    anyWithMessageWithWrapperType?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_message_with_timestamp = 11;
     */
    anyWithMessageWithTimestamp?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_message_containing_map = 12;
     */
    anyWithMessageContainingMap?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_message_containing_struct = 13;
     */
    anyWithMessageContainingStruct?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper any_with_message_containing_repeated_message = 14;
     */
    anyWithMessageContainingRepeatedMessage?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper recursive_any_with_type_field_at_end = 15;
     */
    recursiveAnyWithTypeFieldAtEnd?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper repeated_any = 16;
     */
    repeatedAny?: AnyWrapper;
    /**
     * @generated from protobuf field: proto_util_converter.testing.AnyWrapper empty_any_with_null_type_url = 17;
     */
    emptyAnyWithNullTypeUrl?: AnyWrapper;
    /**
     * @generated from protobuf field: google.protobuf.Any top_level_any = 50;
     */
    topLevelAny?: Any;
    /**
     * @generated from protobuf field: google.protobuf.Any top_level_any_with_type_field_at_end = 51;
     */
    topLevelAnyWithTypeFieldAtEnd?: Any;
    /**
     * @generated from protobuf field: google.protobuf.Any top_level_any_with_pivot_one = 52;
     */
    topLevelAnyWithPivotOne?: Any;
    /**
     * @generated from protobuf field: google.protobuf.Any top_level_any_with_pivot_two = 53;
     */
    topLevelAnyWithPivotTwo?: Any;
    /**
     * @generated from protobuf field: google.protobuf.Any top_level_any_unordered = 54;
     */
    topLevelAnyUnordered?: Any;
}
/**
 * @generated from protobuf message proto_util_converter.testing.AnyWrapper
 */
export interface AnyWrapper {
    /**
     * @generated from protobuf field: google.protobuf.Any any = 1;
     */
    any?: Any;
}
/**
 * Hack to make sure the types we put into the any are included in the types.
 * Real solution is to add these types to the service config.
 *
 * @generated from protobuf message proto_util_converter.testing.Imports
 */
export interface Imports {
    /**
     * @generated from protobuf field: google.protobuf.DoubleValue dbl = 1;
     */
    dbl?: DoubleValue;
    /**
     * @generated from protobuf field: google.protobuf.Struct struct = 2;
     */
    struct?: Struct;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp timestamp = 3;
     */
    timestamp?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Duration duration = 4;
     */
    duration?: Duration;
    /**
     * @generated from protobuf field: google.protobuf.Int32Value i32 = 5;
     */
    i32?: Int32Value;
    /**
     * @generated from protobuf field: proto_util_converter.testing.Data data = 100;
     */
    data?: Data;
}
/**
 * @generated from protobuf message proto_util_converter.testing.Data
 */
export interface Data {
    /**
     * @generated from protobuf field: int32 attr = 1;
     */
    attr: number;
    /**
     * @generated from protobuf field: string str = 2;
     */
    str: string;
    /**
     * @generated from protobuf field: repeated string msgs = 3;
     */
    msgs: string[];
    /**
     * @generated from protobuf field: proto_util_converter.testing.Data nested_data = 4;
     */
    nestedData?: Data;
    /**
     * @generated from protobuf field: google.protobuf.Int32Value int_wrapper = 5;
     */
    intWrapper?: Int32Value;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp time = 6;
     */
    time?: Timestamp;
    /**
     * @generated from protobuf field: map<string, string> map_data = 7;
     */
    mapData: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf field: google.protobuf.Struct struct_data = 8;
     */
    structData?: Struct;
    /**
     * @generated from protobuf field: repeated proto_util_converter.testing.Data repeated_data = 9;
     */
    repeatedData: Data[];
    /**
     * @generated from protobuf field: repeated google.protobuf.Any repeated_any = 10;
     */
    repeatedAny: Any[];
}
/**
 * @generated from protobuf message proto_util_converter.testing.AnyIn
 */
export interface AnyIn {
    /**
     * @generated from protobuf field: string something = 1;
     */
    something: string;
    /**
     * @generated from protobuf field: google.protobuf.Any any = 2;
     */
    any?: Any;
}
/**
 * @generated from protobuf message proto_util_converter.testing.AnyOut
 */
export interface AnyOut {
    /**
     * @generated from protobuf field: google.protobuf.Any any = 1;
     */
    any?: Any;
}
/**
 * @generated from protobuf message proto_util_converter.testing.AnyM
 */
export interface AnyM {
    /**
     * @generated from protobuf field: string foo = 1;
     */
    foo: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class AnyTestCases$Type extends MessageType<AnyTestCases> {
    constructor() {
        super("proto_util_converter.testing.AnyTestCases", [
            { no: 1, name: "empty_any", kind: "message", T: () => AnyWrapper },
            { no: 2, name: "type_only_any", kind: "message", T: () => AnyWrapper },
            { no: 3, name: "wrapper_any", kind: "message", T: () => AnyWrapper },
            { no: 4, name: "any_with_timestamp_value", kind: "message", T: () => AnyWrapper },
            { no: 5, name: "any_with_duration_value", kind: "message", T: () => AnyWrapper },
            { no: 6, name: "any_with_struct_value", kind: "message", T: () => AnyWrapper },
            { no: 7, name: "recursive_any", kind: "message", T: () => AnyWrapper },
            { no: 8, name: "any_with_message_value", kind: "message", T: () => AnyWrapper },
            { no: 9, name: "any_with_nested_message", kind: "message", T: () => AnyWrapper },
            { no: 10, name: "any_with_message_with_wrapper_type", kind: "message", T: () => AnyWrapper },
            { no: 11, name: "any_with_message_with_timestamp", kind: "message", T: () => AnyWrapper },
            { no: 12, name: "any_with_message_containing_map", kind: "message", T: () => AnyWrapper },
            { no: 13, name: "any_with_message_containing_struct", kind: "message", T: () => AnyWrapper },
            { no: 14, name: "any_with_message_containing_repeated_message", kind: "message", T: () => AnyWrapper },
            { no: 15, name: "recursive_any_with_type_field_at_end", kind: "message", T: () => AnyWrapper },
            { no: 16, name: "repeated_any", kind: "message", T: () => AnyWrapper },
            { no: 17, name: "empty_any_with_null_type_url", kind: "message", T: () => AnyWrapper },
            { no: 50, name: "top_level_any", kind: "message", T: () => Any },
            { no: 51, name: "top_level_any_with_type_field_at_end", kind: "message", T: () => Any },
            { no: 52, name: "top_level_any_with_pivot_one", kind: "message", T: () => Any },
            { no: 53, name: "top_level_any_with_pivot_two", kind: "message", T: () => Any },
            { no: 54, name: "top_level_any_unordered", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.AnyTestCases
 */
export const AnyTestCases = new AnyTestCases$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AnyWrapper$Type extends MessageType<AnyWrapper> {
    constructor() {
        super("proto_util_converter.testing.AnyWrapper", [
            { no: 1, name: "any", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.AnyWrapper
 */
export const AnyWrapper = new AnyWrapper$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Imports$Type extends MessageType<Imports> {
    constructor() {
        super("proto_util_converter.testing.Imports", [
            { no: 1, name: "dbl", kind: "message", T: () => DoubleValue },
            { no: 2, name: "struct", kind: "message", T: () => Struct },
            { no: 3, name: "timestamp", kind: "message", T: () => Timestamp },
            { no: 4, name: "duration", kind: "message", T: () => Duration },
            { no: 5, name: "i32", kind: "message", T: () => Int32Value },
            { no: 100, name: "data", kind: "message", T: () => Data }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.Imports
 */
export const Imports = new Imports$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Data$Type extends MessageType<Data> {
    constructor() {
        super("proto_util_converter.testing.Data", [
            { no: 1, name: "attr", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "str", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "msgs", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "nested_data", kind: "message", T: () => Data },
            { no: 5, name: "int_wrapper", kind: "message", T: () => Int32Value },
            { no: 6, name: "time", kind: "message", T: () => Timestamp },
            { no: 7, name: "map_data", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 8, name: "struct_data", kind: "message", T: () => Struct },
            { no: 9, name: "repeated_data", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Data },
            { no: 10, name: "repeated_any", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.Data
 */
export const Data = new Data$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AnyIn$Type extends MessageType<AnyIn> {
    constructor() {
        super("proto_util_converter.testing.AnyIn", [
            { no: 1, name: "something", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "any", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.AnyIn
 */
export const AnyIn = new AnyIn$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AnyOut$Type extends MessageType<AnyOut> {
    constructor() {
        super("proto_util_converter.testing.AnyOut", [
            { no: 1, name: "any", kind: "message", T: () => Any }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.AnyOut
 */
export const AnyOut = new AnyOut$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AnyM$Type extends MessageType<AnyM> {
    constructor() {
        super("proto_util_converter.testing.AnyM", [
            { no: 1, name: "foo", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.AnyM
 */
export const AnyM = new AnyM$Type();
/**
 * @generated ServiceType for protobuf service proto_util_converter.testing.AnyTestService
 */
export const AnyTestService = new ServiceType("proto_util_converter.testing.AnyTestService", [
    { name: "Call", options: {}, I: AnyTestCases, O: AnyTestCases },
    { name: "Call1", options: {}, I: Imports, O: Imports }
]);

// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size
// @generated from protobuf file "google/protobuf/map_proto2_unittest.proto" (package "protobuf_unittest", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
import { MessageType } from "@protobuf-ts/runtime";
import { ImportEnumForMap } from "./unittest_import";
/**
 * @generated from protobuf message protobuf_unittest.TestEnumMap
 */
export interface TestEnumMap {
    /**
     * @generated from protobuf field: map<int32, protobuf_unittest.Proto2MapEnum> known_map_field = 101;
     */
    knownMapField: {
        [key: number]: Proto2MapEnum;
    };
    /**
     * @generated from protobuf field: map<int32, protobuf_unittest.Proto2MapEnum> unknown_map_field = 102;
     */
    unknownMapField: {
        [key: number]: Proto2MapEnum;
    };
}
/**
 * @generated from protobuf message protobuf_unittest.TestEnumMapPlusExtra
 */
export interface TestEnumMapPlusExtra {
    /**
     * @generated from protobuf field: map<int32, protobuf_unittest.Proto2MapEnumPlusExtra> known_map_field = 101;
     */
    knownMapField: {
        [key: number]: Proto2MapEnumPlusExtra;
    };
    /**
     * @generated from protobuf field: map<int32, protobuf_unittest.Proto2MapEnumPlusExtra> unknown_map_field = 102;
     */
    unknownMapField: {
        [key: number]: Proto2MapEnumPlusExtra;
    };
}
/**
 * @generated from protobuf message protobuf_unittest.TestImportEnumMap
 */
export interface TestImportEnumMap {
    /**
     * @generated from protobuf field: map<int32, protobuf_unittest_import.ImportEnumForMap> import_enum_amp = 1;
     */
    importEnumAmp: {
        [key: number]: ImportEnumForMap;
    };
}
/**
 * @generated from protobuf message protobuf_unittest.TestIntIntMap
 */
export interface TestIntIntMap {
    /**
     * @generated from protobuf field: map<int32, int32> m = 1;
     */
    m: {
        [key: number]: number;
    };
}
/**
 * Test all key types: string, plus the non-floating-point scalars.
 *
 * @generated from protobuf message protobuf_unittest.TestMaps
 */
export interface TestMaps {
    /**
     * @generated from protobuf field: map<int32, protobuf_unittest.TestIntIntMap> m_int32 = 1;
     */
    mInt32: {
        [key: number]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<int64, protobuf_unittest.TestIntIntMap> m_int64 = 2;
     */
    mInt64: {
        [key: string]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<uint32, protobuf_unittest.TestIntIntMap> m_uint32 = 3;
     */
    mUint32: {
        [key: number]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<uint64, protobuf_unittest.TestIntIntMap> m_uint64 = 4;
     */
    mUint64: {
        [key: string]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<sint32, protobuf_unittest.TestIntIntMap> m_sint32 = 5;
     */
    mSint32: {
        [key: number]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<sint64, protobuf_unittest.TestIntIntMap> m_sint64 = 6;
     */
    mSint64: {
        [key: string]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<fixed32, protobuf_unittest.TestIntIntMap> m_fixed32 = 7;
     */
    mFixed32: {
        [key: number]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<fixed64, protobuf_unittest.TestIntIntMap> m_fixed64 = 8;
     */
    mFixed64: {
        [key: string]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<sfixed32, protobuf_unittest.TestIntIntMap> m_sfixed32 = 9;
     */
    mSfixed32: {
        [key: number]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<sfixed64, protobuf_unittest.TestIntIntMap> m_sfixed64 = 10;
     */
    mSfixed64: {
        [key: string]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<bool, protobuf_unittest.TestIntIntMap> m_bool = 11;
     */
    mBool: {
        [key: string]: TestIntIntMap;
    };
    /**
     * @generated from protobuf field: map<string, protobuf_unittest.TestIntIntMap> m_string = 12;
     */
    mString: {
        [key: string]: TestIntIntMap;
    };
}
/**
 * Test maps in submessages.
 *
 * @generated from protobuf message protobuf_unittest.TestSubmessageMaps
 */
export interface TestSubmessageMaps {
    /**
     * @generated from protobuf field: optional protobuf_unittest.TestMaps m = 1;
     */
    m?: TestMaps;
}
/**
 * @generated from protobuf enum protobuf_unittest.Proto2MapEnum
 */
export enum Proto2MapEnum {
    /**
     * @generated from protobuf enum value: PROTO2_MAP_ENUM_FOO = 0;
     */
    FOO = 0,
    /**
     * @generated from protobuf enum value: PROTO2_MAP_ENUM_BAR = 1;
     */
    BAR = 1,
    /**
     * @generated from protobuf enum value: PROTO2_MAP_ENUM_BAZ = 2;
     */
    BAZ = 2
}
/**
 * @generated from protobuf enum protobuf_unittest.Proto2MapEnumPlusExtra
 */
export enum Proto2MapEnumPlusExtra {
    /**
     * @generated from protobuf enum value: E_PROTO2_MAP_ENUM_FOO = 0;
     */
    E_PROTO2_MAP_ENUM_FOO = 0,
    /**
     * @generated from protobuf enum value: E_PROTO2_MAP_ENUM_BAR = 1;
     */
    E_PROTO2_MAP_ENUM_BAR = 1,
    /**
     * @generated from protobuf enum value: E_PROTO2_MAP_ENUM_BAZ = 2;
     */
    E_PROTO2_MAP_ENUM_BAZ = 2,
    /**
     * @generated from protobuf enum value: E_PROTO2_MAP_ENUM_EXTRA = 3;
     */
    E_PROTO2_MAP_ENUM_EXTRA = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class TestEnumMap$Type extends MessageType<TestEnumMap> {
    constructor() {
        super("protobuf_unittest.TestEnumMap", [
            { no: 101, name: "known_map_field", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "enum", T: () => ["protobuf_unittest.Proto2MapEnum", Proto2MapEnum, "PROTO2_MAP_ENUM_"] } },
            { no: 102, name: "unknown_map_field", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "enum", T: () => ["protobuf_unittest.Proto2MapEnum", Proto2MapEnum, "PROTO2_MAP_ENUM_"] } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestEnumMap
 */
export const TestEnumMap = new TestEnumMap$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestEnumMapPlusExtra$Type extends MessageType<TestEnumMapPlusExtra> {
    constructor() {
        super("protobuf_unittest.TestEnumMapPlusExtra", [
            { no: 101, name: "known_map_field", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "enum", T: () => ["protobuf_unittest.Proto2MapEnumPlusExtra", Proto2MapEnumPlusExtra] } },
            { no: 102, name: "unknown_map_field", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "enum", T: () => ["protobuf_unittest.Proto2MapEnumPlusExtra", Proto2MapEnumPlusExtra] } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestEnumMapPlusExtra
 */
export const TestEnumMapPlusExtra = new TestEnumMapPlusExtra$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestImportEnumMap$Type extends MessageType<TestImportEnumMap> {
    constructor() {
        super("protobuf_unittest.TestImportEnumMap", [
            { no: 1, name: "import_enum_amp", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "enum", T: () => ["protobuf_unittest_import.ImportEnumForMap", ImportEnumForMap] } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestImportEnumMap
 */
export const TestImportEnumMap = new TestImportEnumMap$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestIntIntMap$Type extends MessageType<TestIntIntMap> {
    constructor() {
        super("protobuf_unittest.TestIntIntMap", [
            { no: 1, name: "m", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "scalar", T: 5 /*ScalarType.INT32*/ } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestIntIntMap
 */
export const TestIntIntMap = new TestIntIntMap$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestMaps$Type extends MessageType<TestMaps> {
    constructor() {
        super("protobuf_unittest.TestMaps", [
            { no: 1, name: "m_int32", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 2, name: "m_int64", kind: "map", K: 3 /*ScalarType.INT64*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 3, name: "m_uint32", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 4, name: "m_uint64", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 5, name: "m_sint32", kind: "map", K: 17 /*ScalarType.SINT32*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 6, name: "m_sint64", kind: "map", K: 18 /*ScalarType.SINT64*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 7, name: "m_fixed32", kind: "map", K: 7 /*ScalarType.FIXED32*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 8, name: "m_fixed64", kind: "map", K: 6 /*ScalarType.FIXED64*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 9, name: "m_sfixed32", kind: "map", K: 15 /*ScalarType.SFIXED32*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 10, name: "m_sfixed64", kind: "map", K: 16 /*ScalarType.SFIXED64*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 11, name: "m_bool", kind: "map", K: 8 /*ScalarType.BOOL*/, V: { kind: "message", T: () => TestIntIntMap } },
            { no: 12, name: "m_string", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => TestIntIntMap } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestMaps
 */
export const TestMaps = new TestMaps$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestSubmessageMaps$Type extends MessageType<TestSubmessageMaps> {
    constructor() {
        super("protobuf_unittest.TestSubmessageMaps", [
            { no: 1, name: "m", kind: "message", T: () => TestMaps }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestSubmessageMaps
 */
export const TestSubmessageMaps = new TestSubmessageMaps$Type();

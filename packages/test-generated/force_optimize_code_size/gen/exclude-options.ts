// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size
// @generated from protobuf file "exclude-options.proto" (package "spec", syntax proto3)
// tslint:disable
import { Empty } from "./google/protobuf/empty";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message spec.MessageWithExcludedOptions
 */
export interface MessageWithExcludedOptions {
    /**
     * @generated from protobuf field: int32 field = 1;
     */
    field: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class MessageWithExcludedOptions$Type extends MessageType<MessageWithExcludedOptions> {
    constructor() {
        super("spec.MessageWithExcludedOptions", [
            { no: 1, name: "field", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "spec.fld_opt2": true, "spec.fld_foo": true } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message spec.MessageWithExcludedOptions
 */
export const MessageWithExcludedOptions = new MessageWithExcludedOptions$Type();
/**
 * @generated ServiceType for protobuf service spec.ServiceWithExcludedOptions
 */
export const ServiceWithExcludedOptions = new ServiceType("spec.ServiceWithExcludedOptions", [
    { name: "Test", options: { "spec.mtd_opt2": true, "spec.mtd_foo": true }, I: Empty, O: Empty }
]);

// @generated by protobuf-ts 2.9.5
// @generated from protobuf file "google/protobuf/unittest_retention.proto" (package "protobuf_unittest", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd
//
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Retention attributes set on fields nested within a message
 *
 * @generated from protobuf message protobuf_unittest.OptionsMessage
 */
export interface OptionsMessage {
    /**
     * @generated from protobuf field: optional int32 plain_field = 1;
     */
    plainField?: number;
    /**
     * @generated from protobuf field: optional int32 runtime_retention_field = 2;
     */
    runtimeRetentionField?: number;
    /**
     * @generated from protobuf field: optional int32 source_retention_field = 3;
     */
    sourceRetentionField?: number;
}
/**
 * @generated from protobuf message protobuf_unittest.Extendee
 */
export interface Extendee {
}
/**
 * @generated from protobuf message protobuf_unittest.TopLevelMessage
 */
export interface TopLevelMessage {
    /**
     * @generated from protobuf field: optional float f = 1;
     */
    f?: number;
    /**
     * @generated from protobuf oneof: o
     */
    o: {
        oneofKind: "i";
        /**
         * @generated from protobuf field: int64 i = 2;
         */
        i: bigint;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message protobuf_unittest.TopLevelMessage.NestedMessage
 */
export interface TopLevelMessage_NestedMessage {
}
/**
 * @generated from protobuf enum protobuf_unittest.TopLevelMessage.NestedEnum
 */
export enum TopLevelMessage_NestedEnum {
    /**
     * @generated from protobuf enum value: NESTED_UNKNOWN = 0;
     */
    NESTED_UNKNOWN = 0
}
/**
 * @generated from protobuf enum protobuf_unittest.TopLevelEnum
 */
export enum TopLevelEnum {
    /**
     * @generated from protobuf enum value: TOP_LEVEL_UNKNOWN = 0;
     */
    TOP_LEVEL_UNKNOWN = 0
}
// @generated message type with reflection information, may provide speed optimized methods
class OptionsMessage$Type extends MessageType<OptionsMessage> {
    constructor() {
        super("protobuf_unittest.OptionsMessage", [
            { no: 1, name: "plain_field", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "runtime_retention_field", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "source_retention_field", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<OptionsMessage>): OptionsMessage {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<OptionsMessage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OptionsMessage): OptionsMessage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 plain_field */ 1:
                    message.plainField = reader.int32();
                    break;
                case /* optional int32 runtime_retention_field */ 2:
                    message.runtimeRetentionField = reader.int32();
                    break;
                case /* optional int32 source_retention_field */ 3:
                    message.sourceRetentionField = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OptionsMessage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 plain_field = 1; */
        if (message.plainField !== undefined)
            writer.tag(1, WireType.Varint).int32(message.plainField);
        /* optional int32 runtime_retention_field = 2; */
        if (message.runtimeRetentionField !== undefined)
            writer.tag(2, WireType.Varint).int32(message.runtimeRetentionField);
        /* optional int32 source_retention_field = 3; */
        if (message.sourceRetentionField !== undefined)
            writer.tag(3, WireType.Varint).int32(message.sourceRetentionField);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.OptionsMessage
 */
export const OptionsMessage = new OptionsMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Extendee$Type extends MessageType<Extendee> {
    constructor() {
        super("protobuf_unittest.Extendee", []);
    }
    create(value?: PartialMessage<Extendee>): Extendee {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Extendee>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Extendee): Extendee {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Extendee, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.Extendee
 */
export const Extendee = new Extendee$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopLevelMessage$Type extends MessageType<TopLevelMessage> {
    constructor() {
        super("protobuf_unittest.TopLevelMessage", [
            { no: 1, name: "f", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/, options: { "protobuf_unittest.field_option": { plainField: 1, runtimeRetentionField: 2 } } },
            { no: 2, name: "i", kind: "scalar", oneof: "o", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ], { "protobuf_unittest.message_option": { plainField: 1, runtimeRetentionField: 2 } });
    }
    create(value?: PartialMessage<TopLevelMessage>): TopLevelMessage {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.o = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<TopLevelMessage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TopLevelMessage): TopLevelMessage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional float f */ 1:
                    message.f = reader.float();
                    break;
                case /* int64 i */ 2:
                    message.o = {
                        oneofKind: "i",
                        i: reader.int64().toBigInt()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TopLevelMessage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional float f = 1; */
        if (message.f !== undefined)
            writer.tag(1, WireType.Bit32).float(message.f);
        /* int64 i = 2; */
        if (message.o.oneofKind === "i")
            writer.tag(2, WireType.Varint).int64(message.o.i);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TopLevelMessage
 */
export const TopLevelMessage = new TopLevelMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopLevelMessage_NestedMessage$Type extends MessageType<TopLevelMessage_NestedMessage> {
    constructor() {
        super("protobuf_unittest.TopLevelMessage.NestedMessage", [], { "protobuf_unittest.message_option": { plainField: 1, runtimeRetentionField: 2 } });
    }
    create(value?: PartialMessage<TopLevelMessage_NestedMessage>): TopLevelMessage_NestedMessage {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<TopLevelMessage_NestedMessage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TopLevelMessage_NestedMessage): TopLevelMessage_NestedMessage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TopLevelMessage_NestedMessage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TopLevelMessage.NestedMessage
 */
export const TopLevelMessage_NestedMessage = new TopLevelMessage_NestedMessage$Type();
/**
 * @generated ServiceType for protobuf service protobuf_unittest.Service
 */
export const Service = new ServiceType("protobuf_unittest.Service", [
    { name: "DoStuff", options: { "protobuf_unittest.method_option": { plainField: 1, runtimeRetentionField: 2 } }, I: TopLevelMessage, O: TopLevelMessage }
], { "protobuf_unittest.service_option": { plainField: 1, runtimeRetentionField: 2 } });

// @generated by protobuf-ts 2.9.5
// @generated from protobuf file "google/protobuf/util/internal/testdata/oneofs.proto" (package "proto_util_converter.testing.oneofs", syntax proto3)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../any";
import { Timestamp } from "../../../timestamp";
import { ListValue } from "../../../struct";
import { Value } from "../../../struct";
import { Struct } from "../../../struct";
/**
 * @generated from protobuf message proto_util_converter.testing.oneofs.OneOfsRequest
 */
export interface OneOfsRequest {
    /**
     * @generated from protobuf field: string value = 1;
     */
    value: string;
    /**
     * @generated from protobuf oneof: data
     */
    data: {
        oneofKind: "strData";
        /**
         * @generated from protobuf field: string str_data = 2;
         */
        strData: string;
    } | {
        oneofKind: "intData";
        /**
         * @generated from protobuf field: int32 int_data = 3;
         */
        intData: number;
    } | {
        oneofKind: "messageData";
        /**
         * Simple message
         *
         * @generated from protobuf field: proto_util_converter.testing.oneofs.Data message_data = 4;
         */
        messageData: Data;
    } | {
        oneofKind: "moreData";
        /**
         * @generated from protobuf field: proto_util_converter.testing.oneofs.MoreData more_data = 5;
         */
        moreData: MoreData;
    } | {
        oneofKind: "structData";
        /**
         * Well known types
         *
         * @generated from protobuf field: google.protobuf.Struct struct_data = 6;
         */
        structData: Struct;
    } | {
        oneofKind: "valueData";
        /**
         * @generated from protobuf field: google.protobuf.Value value_data = 7;
         */
        valueData: Value;
    } | {
        oneofKind: "listValueData";
        /**
         * @generated from protobuf field: google.protobuf.ListValue list_value_data = 8;
         */
        listValueData: ListValue;
    } | {
        oneofKind: "tsData";
        /**
         * @generated from protobuf field: google.protobuf.Timestamp ts_data = 9;
         */
        tsData: Timestamp;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: google.protobuf.Any any_data = 19;
     */
    anyData?: Any;
}
/**
 * @generated from protobuf message proto_util_converter.testing.oneofs.RequestWithSimpleOneof
 */
export interface RequestWithSimpleOneof {
    /**
     * @generated from protobuf field: string value = 1;
     */
    value: string;
    /**
     * @generated from protobuf oneof: data
     */
    data: {
        oneofKind: "strData";
        /**
         * @generated from protobuf field: string str_data = 2;
         */
        strData: string;
    } | {
        oneofKind: "intData";
        /**
         * @generated from protobuf field: int32 int_data = 3;
         */
        intData: number;
    } | {
        oneofKind: "messageData";
        /**
         * @generated from protobuf field: proto_util_converter.testing.oneofs.Data message_data = 4;
         */
        messageData: Data;
    } | {
        oneofKind: "moreData";
        /**
         * @generated from protobuf field: proto_util_converter.testing.oneofs.MoreData more_data = 5;
         */
        moreData: MoreData;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message proto_util_converter.testing.oneofs.Data
 */
export interface Data {
    /**
     * @generated from protobuf field: int32 data_value = 1;
     */
    dataValue: number;
}
/**
 * @generated from protobuf message proto_util_converter.testing.oneofs.MoreData
 */
export interface MoreData {
    /**
     * @generated from protobuf field: string str_value = 1;
     */
    strValue: string;
}
/**
 * @generated from protobuf message proto_util_converter.testing.oneofs.Response
 */
export interface Response {
    /**
     * @generated from protobuf field: string value = 1;
     */
    value: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class OneOfsRequest$Type extends MessageType<OneOfsRequest> {
    constructor() {
        super("proto_util_converter.testing.oneofs.OneOfsRequest", [
            { no: 1, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "str_data", kind: "scalar", oneof: "data", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "int_data", kind: "scalar", oneof: "data", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "message_data", kind: "message", oneof: "data", T: () => Data },
            { no: 5, name: "more_data", kind: "message", oneof: "data", T: () => MoreData },
            { no: 6, name: "struct_data", kind: "message", oneof: "data", T: () => Struct },
            { no: 7, name: "value_data", kind: "message", oneof: "data", T: () => Value },
            { no: 8, name: "list_value_data", kind: "message", oneof: "data", T: () => ListValue },
            { no: 9, name: "ts_data", kind: "message", oneof: "data", T: () => Timestamp },
            { no: 19, name: "any_data", kind: "message", T: () => Any }
        ]);
    }
    create(value?: PartialMessage<OneOfsRequest>): OneOfsRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.value = "";
        message.data = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<OneOfsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OneOfsRequest): OneOfsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string value */ 1:
                    message.value = reader.string();
                    break;
                case /* string str_data */ 2:
                    message.data = {
                        oneofKind: "strData",
                        strData: reader.string()
                    };
                    break;
                case /* int32 int_data */ 3:
                    message.data = {
                        oneofKind: "intData",
                        intData: reader.int32()
                    };
                    break;
                case /* proto_util_converter.testing.oneofs.Data message_data */ 4:
                    message.data = {
                        oneofKind: "messageData",
                        messageData: Data.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).messageData)
                    };
                    break;
                case /* proto_util_converter.testing.oneofs.MoreData more_data */ 5:
                    message.data = {
                        oneofKind: "moreData",
                        moreData: MoreData.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).moreData)
                    };
                    break;
                case /* google.protobuf.Struct struct_data */ 6:
                    message.data = {
                        oneofKind: "structData",
                        structData: Struct.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).structData)
                    };
                    break;
                case /* google.protobuf.Value value_data */ 7:
                    message.data = {
                        oneofKind: "valueData",
                        valueData: Value.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).valueData)
                    };
                    break;
                case /* google.protobuf.ListValue list_value_data */ 8:
                    message.data = {
                        oneofKind: "listValueData",
                        listValueData: ListValue.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).listValueData)
                    };
                    break;
                case /* google.protobuf.Timestamp ts_data */ 9:
                    message.data = {
                        oneofKind: "tsData",
                        tsData: Timestamp.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).tsData)
                    };
                    break;
                case /* google.protobuf.Any any_data */ 19:
                    message.anyData = Any.internalBinaryRead(reader, reader.uint32(), options, message.anyData);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OneOfsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string value = 1; */
        if (message.value !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.value);
        /* string str_data = 2; */
        if (message.data.oneofKind === "strData")
            writer.tag(2, WireType.LengthDelimited).string(message.data.strData);
        /* int32 int_data = 3; */
        if (message.data.oneofKind === "intData")
            writer.tag(3, WireType.Varint).int32(message.data.intData);
        /* proto_util_converter.testing.oneofs.Data message_data = 4; */
        if (message.data.oneofKind === "messageData")
            Data.internalBinaryWrite(message.data.messageData, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* proto_util_converter.testing.oneofs.MoreData more_data = 5; */
        if (message.data.oneofKind === "moreData")
            MoreData.internalBinaryWrite(message.data.moreData, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Struct struct_data = 6; */
        if (message.data.oneofKind === "structData")
            Struct.internalBinaryWrite(message.data.structData, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Value value_data = 7; */
        if (message.data.oneofKind === "valueData")
            Value.internalBinaryWrite(message.data.valueData, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.ListValue list_value_data = 8; */
        if (message.data.oneofKind === "listValueData")
            ListValue.internalBinaryWrite(message.data.listValueData, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Timestamp ts_data = 9; */
        if (message.data.oneofKind === "tsData")
            Timestamp.internalBinaryWrite(message.data.tsData, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Any any_data = 19; */
        if (message.anyData)
            Any.internalBinaryWrite(message.anyData, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.oneofs.OneOfsRequest
 */
export const OneOfsRequest = new OneOfsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RequestWithSimpleOneof$Type extends MessageType<RequestWithSimpleOneof> {
    constructor() {
        super("proto_util_converter.testing.oneofs.RequestWithSimpleOneof", [
            { no: 1, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "str_data", kind: "scalar", oneof: "data", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "int_data", kind: "scalar", oneof: "data", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "message_data", kind: "message", oneof: "data", T: () => Data },
            { no: 5, name: "more_data", kind: "message", oneof: "data", T: () => MoreData }
        ]);
    }
    create(value?: PartialMessage<RequestWithSimpleOneof>): RequestWithSimpleOneof {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.value = "";
        message.data = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<RequestWithSimpleOneof>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RequestWithSimpleOneof): RequestWithSimpleOneof {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string value */ 1:
                    message.value = reader.string();
                    break;
                case /* string str_data */ 2:
                    message.data = {
                        oneofKind: "strData",
                        strData: reader.string()
                    };
                    break;
                case /* int32 int_data */ 3:
                    message.data = {
                        oneofKind: "intData",
                        intData: reader.int32()
                    };
                    break;
                case /* proto_util_converter.testing.oneofs.Data message_data */ 4:
                    message.data = {
                        oneofKind: "messageData",
                        messageData: Data.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).messageData)
                    };
                    break;
                case /* proto_util_converter.testing.oneofs.MoreData more_data */ 5:
                    message.data = {
                        oneofKind: "moreData",
                        moreData: MoreData.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).moreData)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RequestWithSimpleOneof, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string value = 1; */
        if (message.value !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.value);
        /* string str_data = 2; */
        if (message.data.oneofKind === "strData")
            writer.tag(2, WireType.LengthDelimited).string(message.data.strData);
        /* int32 int_data = 3; */
        if (message.data.oneofKind === "intData")
            writer.tag(3, WireType.Varint).int32(message.data.intData);
        /* proto_util_converter.testing.oneofs.Data message_data = 4; */
        if (message.data.oneofKind === "messageData")
            Data.internalBinaryWrite(message.data.messageData, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* proto_util_converter.testing.oneofs.MoreData more_data = 5; */
        if (message.data.oneofKind === "moreData")
            MoreData.internalBinaryWrite(message.data.moreData, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.oneofs.RequestWithSimpleOneof
 */
export const RequestWithSimpleOneof = new RequestWithSimpleOneof$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Data$Type extends MessageType<Data> {
    constructor() {
        super("proto_util_converter.testing.oneofs.Data", [
            { no: 1, name: "data_value", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<Data>): Data {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.dataValue = 0;
        if (value !== undefined)
            reflectionMergePartial<Data>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Data): Data {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 data_value */ 1:
                    message.dataValue = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Data, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 data_value = 1; */
        if (message.dataValue !== 0)
            writer.tag(1, WireType.Varint).int32(message.dataValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.oneofs.Data
 */
export const Data = new Data$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MoreData$Type extends MessageType<MoreData> {
    constructor() {
        super("proto_util_converter.testing.oneofs.MoreData", [
            { no: 1, name: "str_value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<MoreData>): MoreData {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.strValue = "";
        if (value !== undefined)
            reflectionMergePartial<MoreData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MoreData): MoreData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string str_value */ 1:
                    message.strValue = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MoreData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string str_value = 1; */
        if (message.strValue !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.strValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.oneofs.MoreData
 */
export const MoreData = new MoreData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Response$Type extends MessageType<Response> {
    constructor() {
        super("proto_util_converter.testing.oneofs.Response", [
            { no: 1, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Response>): Response {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.value = "";
        if (value !== undefined)
            reflectionMergePartial<Response>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response): Response {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string value */ 1:
                    message.value = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Response, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string value = 1; */
        if (message.value !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.oneofs.Response
 */
export const Response = new Response$Type();

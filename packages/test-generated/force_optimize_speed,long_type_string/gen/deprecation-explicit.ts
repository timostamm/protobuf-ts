// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size,long_type_string
// @generated from protobuf file "deprecation-explicit.proto" (package "spec", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * The entire message is deprecated
 *
 * @deprecated
 * @generated from protobuf message spec.DeprecatedMessage
 */
export interface DeprecatedMessage {
    /**
     * @generated from protobuf field: string field = 1;
     */
    field: string;
}
/**
 * A single field of this message is deprecated
 *
 * @generated from protobuf message spec.DeprecatedFieldMessage
 */
export interface DeprecatedFieldMessage {
    /**
     * This field is deprecated
     *
     * @deprecated
     * @generated from protobuf field: string deprecated_field = 1 [deprecated = true];
     */
    deprecatedField: string;
    /**
     * This field is not deprecated
     *
     * @generated from protobuf field: string current_field = 2;
     */
    currentField: string;
}
/**
 * The entire enum is deprecated
 *
 * @deprecated
 * @generated from protobuf enum spec.DeprecatedEnum
 */
export enum DeprecatedEnum {
    /**
     * @generated from protobuf enum value: DEPRECATED_ENUM_A = 0;
     */
    DEPRECATED_ENUM_A = 0,
    /**
     * @generated from protobuf enum value: DEPRECATED_ENUM_B = 1;
     */
    DEPRECATED_ENUM_B = 1
}
/**
 * Only a single enum value is deprecated
 *
 * @generated from protobuf enum spec.DeprecatedValueEnum
 */
export enum DeprecatedValueEnum {
    /**
     * @generated from protobuf enum value: DEPRECATED_VALUE_ENUM_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @deprecated
     * @generated from protobuf enum value: DEPRECATED_VALUE_ENUM_DEPRECATED_VALUE = 1 [deprecated = true];
     */
    DEPRECATED_VALUE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class DeprecatedMessage$Type extends MessageType<DeprecatedMessage> {
    constructor() {
        super("spec.DeprecatedMessage", [
            { no: 1, name: "field", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @deprecated
 * @generated MessageType for protobuf message spec.DeprecatedMessage
 */
export const DeprecatedMessage = new DeprecatedMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeprecatedFieldMessage$Type extends MessageType<DeprecatedFieldMessage> {
    constructor() {
        super("spec.DeprecatedFieldMessage", [
            { no: 1, name: "deprecated_field", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "current_field", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message spec.DeprecatedFieldMessage
 */
export const DeprecatedFieldMessage = new DeprecatedFieldMessage$Type();

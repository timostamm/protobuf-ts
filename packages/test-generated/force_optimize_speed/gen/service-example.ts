// @generated by protobuf-ts 2.9.5 with parameter force_optimize_speed,long_type_string
// @generated from protobuf file "service-example.proto" (package "spec", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message spec.ExampleRequest
 */
export interface ExampleRequest {
    /**
     * any text
     *
     * @generated from protobuf field: string question = 1;
     */
    question: string;
    /**
     * the server should simulate an error in the requested way
     *
     * @generated from protobuf field: spec.FailRequest please_fail = 2;
     */
    pleaseFail: FailRequest;
    /**
     * the server should delay it's response for this amount of milliseconds
     *
     * @generated from protobuf field: int32 please_delay_response_ms = 3;
     */
    pleaseDelayResponseMs: number;
    /**
     * by default, the server always writes some custom response headers
     *
     * @generated from protobuf field: bool disable_sending_example_response_headers = 4;
     */
    disableSendingExampleResponseHeaders: boolean;
}
/**
 * @generated from protobuf message spec.ExampleResponse
 */
export interface ExampleResponse {
    /**
     * any text
     *
     * @generated from protobuf field: string answer = 1;
     */
    answer: string;
    /**
     * contains the request headers that the server received
     *
     * @generated from protobuf field: map<string, string> your_request_headers = 2;
     */
    yourRequestHeaders: {
        [key: string]: string;
    };
    /**
     * contains the deadline that the server received
     *
     * @generated from protobuf field: string your_deadline = 3;
     */
    yourDeadline: string;
    /**
     * the failure requested
     *
     * @generated from protobuf field: spec.FailRequest your_fail_request = 4;
     */
    yourFailRequest: FailRequest;
}
/**
 * @generated from protobuf enum spec.FailRequest
 */
export enum FailRequest {
    /**
     * don't fail
     *
     * @generated from protobuf enum value: FAIL_REQUEST_NONE = 0;
     */
    FAIL_REQUEST_NONE = 0,
    /**
     * send an error status trailer after sending a message
     *
     * @generated from protobuf enum value: MESSAGE_THEN_ERROR_STATUS = 1;
     */
    MESSAGE_THEN_ERROR_STATUS = 1,
    /**
     * send an error status, don't send any message
     *
     * @generated from protobuf enum value: ERROR_STATUS_ONLY = 2;
     */
    ERROR_STATUS_ONLY = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class ExampleRequest$Type extends MessageType<ExampleRequest> {
    constructor() {
        super("spec.ExampleRequest", [
            { no: 1, name: "question", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "please_fail", kind: "enum", T: () => ["spec.FailRequest", FailRequest] },
            { no: 3, name: "please_delay_response_ms", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "disable_sending_example_response_headers", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ExampleRequest>): ExampleRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.question = "";
        message.pleaseFail = 0;
        message.pleaseDelayResponseMs = 0;
        message.disableSendingExampleResponseHeaders = false;
        if (value !== undefined)
            reflectionMergePartial<ExampleRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExampleRequest): ExampleRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string question */ 1:
                    message.question = reader.string();
                    break;
                case /* spec.FailRequest please_fail */ 2:
                    message.pleaseFail = reader.int32();
                    break;
                case /* int32 please_delay_response_ms */ 3:
                    message.pleaseDelayResponseMs = reader.int32();
                    break;
                case /* bool disable_sending_example_response_headers */ 4:
                    message.disableSendingExampleResponseHeaders = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ExampleRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string question = 1; */
        if (message.question !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.question);
        /* spec.FailRequest please_fail = 2; */
        if (message.pleaseFail !== 0)
            writer.tag(2, WireType.Varint).int32(message.pleaseFail);
        /* int32 please_delay_response_ms = 3; */
        if (message.pleaseDelayResponseMs !== 0)
            writer.tag(3, WireType.Varint).int32(message.pleaseDelayResponseMs);
        /* bool disable_sending_example_response_headers = 4; */
        if (message.disableSendingExampleResponseHeaders !== false)
            writer.tag(4, WireType.Varint).bool(message.disableSendingExampleResponseHeaders);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message spec.ExampleRequest
 */
export const ExampleRequest = new ExampleRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExampleResponse$Type extends MessageType<ExampleResponse> {
    constructor() {
        super("spec.ExampleResponse", [
            { no: 1, name: "answer", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "your_request_headers", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 3, name: "your_deadline", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "your_fail_request", kind: "enum", T: () => ["spec.FailRequest", FailRequest] }
        ]);
    }
    create(value?: PartialMessage<ExampleResponse>): ExampleResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.answer = "";
        message.yourRequestHeaders = {};
        message.yourDeadline = "";
        message.yourFailRequest = 0;
        if (value !== undefined)
            reflectionMergePartial<ExampleResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExampleResponse): ExampleResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string answer */ 1:
                    message.answer = reader.string();
                    break;
                case /* map<string, string> your_request_headers */ 2:
                    this.binaryReadMap2(message.yourRequestHeaders, reader, options);
                    break;
                case /* string your_deadline */ 3:
                    message.yourDeadline = reader.string();
                    break;
                case /* spec.FailRequest your_fail_request */ 4:
                    message.yourFailRequest = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap2(map: ExampleResponse["yourRequestHeaders"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof ExampleResponse["yourRequestHeaders"] | undefined, val: ExampleResponse["yourRequestHeaders"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field spec.ExampleResponse.your_request_headers");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message: ExampleResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string answer = 1; */
        if (message.answer !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.answer);
        /* map<string, string> your_request_headers = 2; */
        for (let k of globalThis.Object.keys(message.yourRequestHeaders))
            writer.tag(2, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.yourRequestHeaders[k]).join();
        /* string your_deadline = 3; */
        if (message.yourDeadline !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.yourDeadline);
        /* spec.FailRequest your_fail_request = 4; */
        if (message.yourFailRequest !== 0)
            writer.tag(4, WireType.Varint).int32(message.yourFailRequest);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message spec.ExampleResponse
 */
export const ExampleResponse = new ExampleResponse$Type();
/**
 * @generated ServiceType for protobuf service spec.ExampleService
 */
export const ExampleService = new ServiceType("spec.ExampleService", [
    { name: "Unary", options: {}, I: ExampleRequest, O: ExampleResponse },
    { name: "ServerStream", serverStreaming: true, options: {}, I: ExampleRequest, O: ExampleResponse },
    { name: "ClientStream", clientStreaming: true, options: {}, I: ExampleRequest, O: ExampleResponse },
    { name: "Bidi", serverStreaming: true, clientStreaming: true, options: {}, I: ExampleRequest, O: ExampleResponse }
]);

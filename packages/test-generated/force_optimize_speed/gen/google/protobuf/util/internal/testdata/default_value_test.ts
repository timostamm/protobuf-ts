// @generated by protobuf-ts 2.9.5 with parameter force_optimize_speed,long_type_string
// @generated from protobuf file "google/protobuf/util/internal/testdata/default_value_test.proto" (package "proto_util_converter.testing", syntax proto3)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message proto_util_converter.testing.DefaultValueTest
 */
export interface DefaultValueTest {
    /**
     * @generated from protobuf field: double double_value = 1;
     */
    doubleValue: number;
    /**
     * @generated from protobuf field: repeated double repeated_double = 2;
     */
    repeatedDouble: number[];
    /**
     * @generated from protobuf field: float float_value = 3;
     */
    floatValue: number;
    /**
     * @generated from protobuf field: int64 int64_value = 5;
     */
    int64Value: string;
    /**
     * @generated from protobuf field: uint64 uint64_value = 7;
     */
    uint64Value: string;
    /**
     * @generated from protobuf field: int32 int32_value = 9;
     */
    int32Value: number;
    /**
     * @generated from protobuf field: uint32 uint32_value = 11;
     */
    uint32Value: number;
    /**
     * @generated from protobuf field: bool bool_value = 13;
     */
    boolValue: boolean;
    /**
     * @generated from protobuf field: string string_value = 15;
     */
    stringValue: string;
    /**
     * @generated from protobuf field: bytes bytes_value = 17;
     */
    bytesValue: Uint8Array;
    /**
     * @generated from protobuf field: proto_util_converter.testing.DefaultValueTest.EnumDefault enum_value = 18;
     */
    enumValue: DefaultValueTest_EnumDefault;
}
/**
 * @generated from protobuf enum proto_util_converter.testing.DefaultValueTest.EnumDefault
 */
export enum DefaultValueTest_EnumDefault {
    /**
     * @generated from protobuf enum value: ENUM_FIRST = 0;
     */
    ENUM_FIRST = 0,
    /**
     * @generated from protobuf enum value: ENUM_SECOND = 1;
     */
    ENUM_SECOND = 1,
    /**
     * @generated from protobuf enum value: ENUM_THIRD = 2;
     */
    ENUM_THIRD = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class DefaultValueTest$Type extends MessageType<DefaultValueTest> {
    constructor() {
        super("proto_util_converter.testing.DefaultValueTest", [
            { no: 1, name: "double_value", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "repeated_double", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "float_value", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 5, name: "int64_value", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 7, name: "uint64_value", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 9, name: "int32_value", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "uint32_value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "bool_value", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "string_value", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "bytes_value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 18, name: "enum_value", kind: "enum", T: () => ["proto_util_converter.testing.DefaultValueTest.EnumDefault", DefaultValueTest_EnumDefault] }
        ]);
    }
    create(value?: PartialMessage<DefaultValueTest>): DefaultValueTest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.doubleValue = 0;
        message.repeatedDouble = [];
        message.floatValue = 0;
        message.int64Value = "0";
        message.uint64Value = "0";
        message.int32Value = 0;
        message.uint32Value = 0;
        message.boolValue = false;
        message.stringValue = "";
        message.bytesValue = new Uint8Array(0);
        message.enumValue = 0;
        if (value !== undefined)
            reflectionMergePartial<DefaultValueTest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DefaultValueTest): DefaultValueTest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* double double_value */ 1:
                    message.doubleValue = reader.double();
                    break;
                case /* repeated double repeated_double */ 2:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.repeatedDouble.push(reader.double());
                    else
                        message.repeatedDouble.push(reader.double());
                    break;
                case /* float float_value */ 3:
                    message.floatValue = reader.float();
                    break;
                case /* int64 int64_value */ 5:
                    message.int64Value = reader.int64().toString();
                    break;
                case /* uint64 uint64_value */ 7:
                    message.uint64Value = reader.uint64().toString();
                    break;
                case /* int32 int32_value */ 9:
                    message.int32Value = reader.int32();
                    break;
                case /* uint32 uint32_value */ 11:
                    message.uint32Value = reader.uint32();
                    break;
                case /* bool bool_value */ 13:
                    message.boolValue = reader.bool();
                    break;
                case /* string string_value */ 15:
                    message.stringValue = reader.string();
                    break;
                case /* bytes bytes_value */ 17:
                    message.bytesValue = reader.bytes();
                    break;
                case /* proto_util_converter.testing.DefaultValueTest.EnumDefault enum_value */ 18:
                    message.enumValue = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DefaultValueTest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* double double_value = 1; */
        if (message.doubleValue !== 0)
            writer.tag(1, WireType.Bit64).double(message.doubleValue);
        /* repeated double repeated_double = 2; */
        if (message.repeatedDouble.length) {
            writer.tag(2, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.repeatedDouble.length; i++)
                writer.double(message.repeatedDouble[i]);
            writer.join();
        }
        /* float float_value = 3; */
        if (message.floatValue !== 0)
            writer.tag(3, WireType.Bit32).float(message.floatValue);
        /* int64 int64_value = 5; */
        if (message.int64Value !== "0")
            writer.tag(5, WireType.Varint).int64(message.int64Value);
        /* uint64 uint64_value = 7; */
        if (message.uint64Value !== "0")
            writer.tag(7, WireType.Varint).uint64(message.uint64Value);
        /* int32 int32_value = 9; */
        if (message.int32Value !== 0)
            writer.tag(9, WireType.Varint).int32(message.int32Value);
        /* uint32 uint32_value = 11; */
        if (message.uint32Value !== 0)
            writer.tag(11, WireType.Varint).uint32(message.uint32Value);
        /* bool bool_value = 13; */
        if (message.boolValue !== false)
            writer.tag(13, WireType.Varint).bool(message.boolValue);
        /* string string_value = 15; */
        if (message.stringValue !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.stringValue);
        /* bytes bytes_value = 17; */
        if (message.bytesValue.length)
            writer.tag(17, WireType.LengthDelimited).bytes(message.bytesValue);
        /* proto_util_converter.testing.DefaultValueTest.EnumDefault enum_value = 18; */
        if (message.enumValue !== 0)
            writer.tag(18, WireType.Varint).int32(message.enumValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.DefaultValueTest
 */
export const DefaultValueTest = new DefaultValueTest$Type();

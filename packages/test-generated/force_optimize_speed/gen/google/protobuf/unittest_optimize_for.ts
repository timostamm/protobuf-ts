// @generated by protobuf-ts 2.9.5 with parameter force_optimize_speed,long_type_string
// @generated from protobuf file "google/protobuf/unittest_optimize_for.proto" (package "protobuf_unittest", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//
// Author: kenton@google.com (Kenton Varda)
//  Based on original Protocol Buffers design by
//  Sanjay Ghemawat, Jeff Dean, and others.
//
// A proto file which uses optimize_for = CODE_SIZE.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ForeignMessage } from "./unittest";
/**
 * @generated from protobuf message protobuf_unittest.TestOptimizedForSize
 */
export interface TestOptimizedForSize {
    /**
     * @generated from protobuf field: optional int32 i = 1;
     */
    i?: number;
    /**
     * @generated from protobuf field: optional protobuf_unittest.ForeignMessage msg = 19;
     */
    msg?: ForeignMessage;
    /**
     * @generated from protobuf oneof: foo
     */
    foo: {
        oneofKind: "integerField";
        /**
         * @generated from protobuf field: int32 integer_field = 2;
         */
        integerField: number;
    } | {
        oneofKind: "stringField";
        /**
         * @generated from protobuf field: string string_field = 3;
         */
        stringField: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message protobuf_unittest.TestRequiredOptimizedForSize
 */
export interface TestRequiredOptimizedForSize {
    /**
     * @generated from protobuf field: int32 x = 1;
     */
    x: number;
}
/**
 * @generated from protobuf message protobuf_unittest.TestOptionalOptimizedForSize
 */
export interface TestOptionalOptimizedForSize {
    /**
     * @generated from protobuf field: optional protobuf_unittest.TestRequiredOptimizedForSize o = 1;
     */
    o?: TestRequiredOptimizedForSize;
}
// @generated message type with reflection information, may provide speed optimized methods
class TestOptimizedForSize$Type extends MessageType<TestOptimizedForSize> {
    constructor() {
        super("protobuf_unittest.TestOptimizedForSize", [
            { no: 1, name: "i", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 19, name: "msg", kind: "message", T: () => ForeignMessage },
            { no: 2, name: "integer_field", kind: "scalar", oneof: "foo", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "string_field", kind: "scalar", oneof: "foo", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TestOptimizedForSize>): TestOptimizedForSize {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.foo = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<TestOptimizedForSize>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TestOptimizedForSize): TestOptimizedForSize {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 i */ 1:
                    message.i = reader.int32();
                    break;
                case /* optional protobuf_unittest.ForeignMessage msg */ 19:
                    message.msg = ForeignMessage.internalBinaryRead(reader, reader.uint32(), options, message.msg);
                    break;
                case /* int32 integer_field */ 2:
                    message.foo = {
                        oneofKind: "integerField",
                        integerField: reader.int32()
                    };
                    break;
                case /* string string_field */ 3:
                    message.foo = {
                        oneofKind: "stringField",
                        stringField: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TestOptimizedForSize, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 i = 1; */
        if (message.i !== undefined)
            writer.tag(1, WireType.Varint).int32(message.i);
        /* optional protobuf_unittest.ForeignMessage msg = 19; */
        if (message.msg)
            ForeignMessage.internalBinaryWrite(message.msg, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* int32 integer_field = 2; */
        if (message.foo.oneofKind === "integerField")
            writer.tag(2, WireType.Varint).int32(message.foo.integerField);
        /* string string_field = 3; */
        if (message.foo.oneofKind === "stringField")
            writer.tag(3, WireType.LengthDelimited).string(message.foo.stringField);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestOptimizedForSize
 */
export const TestOptimizedForSize = new TestOptimizedForSize$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestRequiredOptimizedForSize$Type extends MessageType<TestRequiredOptimizedForSize> {
    constructor() {
        super("protobuf_unittest.TestRequiredOptimizedForSize", [
            { no: 1, name: "x", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<TestRequiredOptimizedForSize>): TestRequiredOptimizedForSize {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.x = 0;
        if (value !== undefined)
            reflectionMergePartial<TestRequiredOptimizedForSize>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TestRequiredOptimizedForSize): TestRequiredOptimizedForSize {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 x */ 1:
                    message.x = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TestRequiredOptimizedForSize, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 x = 1; */
        if (message.x !== 0)
            writer.tag(1, WireType.Varint).int32(message.x);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestRequiredOptimizedForSize
 */
export const TestRequiredOptimizedForSize = new TestRequiredOptimizedForSize$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestOptionalOptimizedForSize$Type extends MessageType<TestOptionalOptimizedForSize> {
    constructor() {
        super("protobuf_unittest.TestOptionalOptimizedForSize", [
            { no: 1, name: "o", kind: "message", T: () => TestRequiredOptimizedForSize }
        ]);
    }
    create(value?: PartialMessage<TestOptionalOptimizedForSize>): TestOptionalOptimizedForSize {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<TestOptionalOptimizedForSize>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TestOptionalOptimizedForSize): TestOptionalOptimizedForSize {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional protobuf_unittest.TestRequiredOptimizedForSize o */ 1:
                    message.o = TestRequiredOptimizedForSize.internalBinaryRead(reader, reader.uint32(), options, message.o);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TestOptionalOptimizedForSize, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional protobuf_unittest.TestRequiredOptimizedForSize o = 1; */
        if (message.o)
            TestRequiredOptimizedForSize.internalBinaryWrite(message.o, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestOptionalOptimizedForSize
 */
export const TestOptionalOptimizedForSize = new TestOptionalOptimizedForSize$Type();

// @generated by protobuf-ts 2.9.5 with parameter force_optimize_speed,long_type_string
// @generated from protobuf file "google/protobuf/go_features.proto" (package "pb", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2023 Google Inc.  All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message pb.GoFeatures
 */
export interface GoFeatures {
    /**
     * Whether or not to generate the deprecated UnmarshalJSON method for enums.
     *
     * @generated from protobuf field: optional bool legacy_unmarshal_json_enum = 1;
     */
    legacyUnmarshalJsonEnum?: boolean;
    /**
     * One of OPEN, HYBRID or OPAQUE.
     *
     * @generated from protobuf field: optional pb.GoFeatures.APILevel api_level = 2;
     */
    apiLevel?: GoFeatures_APILevel;
}
/**
 * @generated from protobuf enum pb.GoFeatures.APILevel
 */
export enum GoFeatures_APILevel {
    /**
     * API_LEVEL_UNSPECIFIED results in selecting the OPEN API,
     * but needs to be a separate value to distinguish between
     * an explicitly set api level or a missing api level.
     *
     * @generated from protobuf enum value: API_LEVEL_UNSPECIFIED = 0;
     */
    API_LEVEL_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: API_OPEN = 1;
     */
    API_OPEN = 1,
    /**
     * @generated from protobuf enum value: API_HYBRID = 2;
     */
    API_HYBRID = 2,
    /**
     * @generated from protobuf enum value: API_OPAQUE = 3;
     */
    API_OPAQUE = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class GoFeatures$Type extends MessageType<GoFeatures> {
    constructor() {
        super("pb.GoFeatures", [
            { no: 1, name: "legacy_unmarshal_json_enum", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "api_level", kind: "enum", opt: true, T: () => ["pb.GoFeatures.APILevel", GoFeatures_APILevel] }
        ]);
    }
    create(value?: PartialMessage<GoFeatures>): GoFeatures {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GoFeatures>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GoFeatures): GoFeatures {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool legacy_unmarshal_json_enum */ 1:
                    message.legacyUnmarshalJsonEnum = reader.bool();
                    break;
                case /* optional pb.GoFeatures.APILevel api_level */ 2:
                    message.apiLevel = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GoFeatures, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool legacy_unmarshal_json_enum = 1; */
        if (message.legacyUnmarshalJsonEnum !== undefined)
            writer.tag(1, WireType.Varint).bool(message.legacyUnmarshalJsonEnum);
        /* optional pb.GoFeatures.APILevel api_level = 2; */
        if (message.apiLevel !== undefined)
            writer.tag(2, WireType.Varint).int32(message.apiLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pb.GoFeatures
 */
export const GoFeatures = new GoFeatures$Type();

// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size,long_type_string
// @generated from protobuf file "google/protobuf/unittest_extension_set.proto" (package "protobuf_unittest", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd
//
//
// Author: kenton@google.com (Kenton Varda)
//  Based on original Protocol Buffers design by
//  Sanjay Ghemawat, Jeff Dean, and others.
//
// This file contains messages for testing extensions.
//
import { MessageType } from "@protobuf-ts/runtime";
/**
 * A message with message_set_wire_format.
 *
 * @generated from protobuf message protobuf_unittest.TestExtensionSet
 */
export interface TestExtensionSet {
}
/**
 * @generated from protobuf message protobuf_unittest.TestExtensionSetContainer
 */
export interface TestExtensionSetContainer {
    /**
     * @generated from protobuf field: optional protobuf_unittest.TestExtensionSet extension = 1;
     */
    extension?: TestExtensionSet;
}
// @generated message type with reflection information, may provide speed optimized methods
class TestExtensionSet$Type extends MessageType<TestExtensionSet> {
    constructor() {
        super("protobuf_unittest.TestExtensionSet", []);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestExtensionSet
 */
export const TestExtensionSet = new TestExtensionSet$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestExtensionSetContainer$Type extends MessageType<TestExtensionSetContainer> {
    constructor() {
        super("protobuf_unittest.TestExtensionSetContainer", [
            { no: 1, name: "extension", kind: "message", T: () => TestExtensionSet }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest.TestExtensionSetContainer
 */
export const TestExtensionSetContainer = new TestExtensionSetContainer$Type();

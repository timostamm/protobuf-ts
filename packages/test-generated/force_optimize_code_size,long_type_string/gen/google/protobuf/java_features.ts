// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size,long_type_string
// @generated from protobuf file "google/protobuf/java_features.proto" (package "pb", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2023 Google Inc.  All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd
//
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message pb.JavaFeatures
 */
export interface JavaFeatures {
    /**
     * Whether or not to treat an enum field as closed.  This option is only
     * applicable to enum fields, and will be removed in the future.  It is
     * consistent with the legacy behavior of using proto3 enum types for proto2
     * fields.
     *
     * @generated from protobuf field: optional bool legacy_closed_enum = 1;
     */
    legacyClosedEnum?: boolean;
    /**
     * @generated from protobuf field: optional pb.JavaFeatures.Utf8Validation utf8_validation = 2;
     */
    utf8Validation?: JavaFeatures_Utf8Validation;
}
/**
 * The UTF8 validation strategy to use.  See go/editions-utf8-validation for
 * more information on this feature.
 *
 * @generated from protobuf enum pb.JavaFeatures.Utf8Validation
 */
export enum JavaFeatures_Utf8Validation {
    /**
     * Invalid default, which should never be used.
     *
     * @generated from protobuf enum value: UTF8_VALIDATION_UNKNOWN = 0;
     */
    UTF8_VALIDATION_UNKNOWN = 0,
    /**
     * Respect the UTF8 validation behavior specified by the global
     * utf8_validation feature.
     *
     * @generated from protobuf enum value: DEFAULT = 1;
     */
    DEFAULT = 1,
    /**
     * Verifies UTF8 validity overriding the global utf8_validation
     * feature. This represents the legacy java_string_check_utf8 option.
     *
     * @generated from protobuf enum value: VERIFY = 2;
     */
    VERIFY = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class JavaFeatures$Type extends MessageType<JavaFeatures> {
    constructor() {
        super("pb.JavaFeatures", [
            { no: 1, name: "legacy_closed_enum", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "utf8_validation", kind: "enum", opt: true, T: () => ["pb.JavaFeatures.Utf8Validation", JavaFeatures_Utf8Validation] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message pb.JavaFeatures
 */
export const JavaFeatures = new JavaFeatures$Type();

// @generated by protobuf-ts 2.9.5 with parameter force_optimize_code_size,long_type_string
// @generated from protobuf file "google/protobuf/util/internal/testdata/timestamp_duration.proto" (package "proto_util_converter.testing", syntax proto3)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../../duration";
import { Timestamp } from "../../../timestamp";
/**
 * @generated from protobuf message proto_util_converter.testing.TimestampDurationTestCases
 */
export interface TimestampDurationTestCases {
    /**
     * Timestamp tests
     *
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType epoch = 1;
     */
    epoch?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType epoch2 = 2;
     */
    epoch2?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType mintime = 3;
     */
    mintime?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType maxtime = 4;
     */
    maxtime?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType timeval1 = 5;
     */
    timeval1?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType timeval2 = 6;
     */
    timeval2?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType timeval3 = 7;
     */
    timeval3?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType timeval4 = 8;
     */
    timeval4?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType timeval5 = 9;
     */
    timeval5?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType timeval6 = 10;
     */
    timeval6?: TimeStampType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.TimeStampType timeval7 = 11;
     */
    timeval7?: TimeStampType;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp timeval8 = 12;
     */
    timeval8?: Timestamp;
    /**
     * Duration tests
     *
     * @generated from protobuf field: proto_util_converter.testing.DurationType zero_duration = 101;
     */
    zeroDuration?: DurationType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.DurationType min_duration = 102;
     */
    minDuration?: DurationType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.DurationType max_duration = 103;
     */
    maxDuration?: DurationType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.DurationType duration1 = 104;
     */
    duration1?: DurationType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.DurationType duration2 = 105;
     */
    duration2?: DurationType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.DurationType duration3 = 106;
     */
    duration3?: DurationType;
    /**
     * @generated from protobuf field: proto_util_converter.testing.DurationType duration4 = 107;
     */
    duration4?: DurationType;
    /**
     * @generated from protobuf field: google.protobuf.Duration duration5 = 108;
     */
    duration5?: Duration;
}
/**
 * @generated from protobuf message proto_util_converter.testing.TimeStampType
 */
export interface TimeStampType {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp timestamp = 1;
     */
    timestamp?: Timestamp;
}
/**
 * @generated from protobuf message proto_util_converter.testing.DurationType
 */
export interface DurationType {
    /**
     * @generated from protobuf field: google.protobuf.Duration duration = 1;
     */
    duration?: Duration;
}
/**
 * @generated from protobuf message proto_util_converter.testing.TimestampDuration
 */
export interface TimestampDuration {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp ts = 1;
     */
    ts?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Duration dur = 2;
     */
    dur?: Duration;
    /**
     * @generated from protobuf field: repeated google.protobuf.Timestamp rep_ts = 3;
     */
    repTs: Timestamp[];
}
// @generated message type with reflection information, may provide speed optimized methods
class TimestampDurationTestCases$Type extends MessageType<TimestampDurationTestCases> {
    constructor() {
        super("proto_util_converter.testing.TimestampDurationTestCases", [
            { no: 1, name: "epoch", kind: "message", T: () => TimeStampType },
            { no: 2, name: "epoch2", kind: "message", T: () => TimeStampType },
            { no: 3, name: "mintime", kind: "message", T: () => TimeStampType },
            { no: 4, name: "maxtime", kind: "message", T: () => TimeStampType },
            { no: 5, name: "timeval1", kind: "message", T: () => TimeStampType },
            { no: 6, name: "timeval2", kind: "message", T: () => TimeStampType },
            { no: 7, name: "timeval3", kind: "message", T: () => TimeStampType },
            { no: 8, name: "timeval4", kind: "message", T: () => TimeStampType },
            { no: 9, name: "timeval5", kind: "message", T: () => TimeStampType },
            { no: 10, name: "timeval6", kind: "message", T: () => TimeStampType },
            { no: 11, name: "timeval7", kind: "message", T: () => TimeStampType },
            { no: 12, name: "timeval8", kind: "message", T: () => Timestamp },
            { no: 101, name: "zero_duration", kind: "message", T: () => DurationType },
            { no: 102, name: "min_duration", kind: "message", T: () => DurationType },
            { no: 103, name: "max_duration", kind: "message", T: () => DurationType },
            { no: 104, name: "duration1", kind: "message", T: () => DurationType },
            { no: 105, name: "duration2", kind: "message", T: () => DurationType },
            { no: 106, name: "duration3", kind: "message", T: () => DurationType },
            { no: 107, name: "duration4", kind: "message", T: () => DurationType },
            { no: 108, name: "duration5", kind: "message", T: () => Duration }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.TimestampDurationTestCases
 */
export const TimestampDurationTestCases = new TimestampDurationTestCases$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TimeStampType$Type extends MessageType<TimeStampType> {
    constructor() {
        super("proto_util_converter.testing.TimeStampType", [
            { no: 1, name: "timestamp", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.TimeStampType
 */
export const TimeStampType = new TimeStampType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DurationType$Type extends MessageType<DurationType> {
    constructor() {
        super("proto_util_converter.testing.DurationType", [
            { no: 1, name: "duration", kind: "message", T: () => Duration }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.DurationType
 */
export const DurationType = new DurationType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TimestampDuration$Type extends MessageType<TimestampDuration> {
    constructor() {
        super("proto_util_converter.testing.TimestampDuration", [
            { no: 1, name: "ts", kind: "message", T: () => Timestamp },
            { no: 2, name: "dur", kind: "message", T: () => Duration },
            { no: 3, name: "rep_ts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message proto_util_converter.testing.TimestampDuration
 */
export const TimestampDuration = new TimestampDuration$Type();
/**
 * @generated ServiceType for protobuf service proto_util_converter.testing.TimestampDurationTestService
 */
export const TimestampDurationTestService = new ServiceType("proto_util_converter.testing.TimestampDurationTestService", [
    { name: "Call", options: {}, I: TimestampDurationTestCases, O: TimestampDurationTestCases }
]);

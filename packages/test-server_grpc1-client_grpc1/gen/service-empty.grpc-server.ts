// @generated by protobuf-ts 2.9.6 with parameter server_grpc1,client_grpc1,optimize_code_size
// @generated from protobuf file "service-empty.proto" (package "spec", syntax proto3)
// tslint:disable
import { Empty } from "./google/protobuf/empty";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service spec.EmptyService
 */
export interface IEmptyService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: Get(google.protobuf.Empty) returns (google.protobuf.Empty);
     */
    get: grpc.handleUnaryCall<Empty, Empty>;
}
/**
 * @grpc/grpc-js definition for the protobuf service spec.EmptyService.
 *
 * Usage: Implement the interface IEmptyService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IEmptyService = ...
 * server.addService(emptyServiceDefinition, service);
 * ```
 */
export const emptyServiceDefinition: grpc.ServiceDefinition<IEmptyService> = {
    get: {
        path: "/spec.EmptyService/Get",
        originalName: "Get",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Empty.fromBinary(bytes),
        requestDeserialize: bytes => Empty.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Empty.toBinary(value)),
        requestSerialize: value => Buffer.from(Empty.toBinary(value))
    }
};
